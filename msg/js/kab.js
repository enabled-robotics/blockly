// This file was automatically generated.  Do not modify.

'use strict';

Blockly.Msg["ADD_COMMENT"] = "Rnu awennit";
Blockly.Msg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Ur izmir ara ad yekkes amutti '%1' acku yedda di tbadut n twuri '%2'";
Blockly.Msg["CHANGE_VALUE_TITLE"] = "Beddel azal:";
Blockly.Msg["CLEAN_UP"] = "Sfeḍ iḥedran";
Blockly.Msg["COLLAPSED_WARNINGS_WARNING"] = "Iḥedran yettin gebren ilɣa.";
Blockly.Msg["COLLAPSE_ALL"] = "Fneẓ iḥedran";
Blockly.Msg["COLLAPSE_BLOCK"] = "Fneẓ iḥder";
Blockly.Msg["COLOUR_BLEND_COLOUR1"] = "ini 1";
Blockly.Msg["COLOUR_BLEND_COLOUR2"] = "ini 2";
Blockly.Msg["COLOUR_BLEND_HELPURL"] = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg["COLOUR_BLEND_RATIO"] = "afmiḍi";
Blockly.Msg["COLOUR_BLEND_TITLE"] = "rkec";
Blockly.Msg["COLOUR_BLEND_TOOLTIP"] = "Sexleḍ sin n yiniten d tesmekta (gar 0.0 ar 1.0).";
Blockly.Msg["COLOUR_PICKER_HELPURL"] = "https://kab.wikipedia.org/wiki/Ini";
Blockly.Msg["COLOUR_PICKER_TOOLTIP"] = "Fren ini seg ugalis.";
Blockly.Msg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
Blockly.Msg["COLOUR_RANDOM_TITLE"] = "ini agacuran";
Blockly.Msg["COLOUR_RANDOM_TOOLTIP"] = "Fren ini s wudem agacuran.";
Blockly.Msg["COLOUR_RGB_BLUE"] = "anili";
Blockly.Msg["COLOUR_RGB_GREEN"] = "azegzaw";
Blockly.Msg["COLOUR_RGB_HELPURL"] = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg["COLOUR_RGB_RED"] = "azeggaɣ";
Blockly.Msg["COLOUR_RGB_TITLE"] = "ini s";
Blockly.Msg["COLOUR_RGB_TOOLTIP"] = "Rnu ini s tnecta yettunefk s tesmekta n uzeggaɣ, azegzaw, akked unili. Yessefk akk azalen ad ilin gar 0 akked 100.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "ffeɣ seg tneddict";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "kemmel s wallus d tneddict d-iteddun";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Ffeɣ si tneddict tamagbart.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Zgel ayen i d-yeqqimen di tneddict-a, sakin kemmel allus d-itteddun.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Ɣur-k: Iḥder-a yessefk ad yettwaseqdec di tneddict.";
Blockly.Msg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_TITLE"] = "i yal aferdis  %1 di tebdart %2";
Blockly.Msg["CONTROLS_FOREACH_TOOLTIP"] = "I yal aferdis n tebdart, mudd azal n uferdis i umutti '%1', sakin selkem tinaḍin.";
Blockly.Msg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg["CONTROLS_FOR_TITLE"] = "siḍen akked %1 seg %2 ar %3 s %4";
Blockly.Msg["CONTROLS_FOR_TOOLTIP"] = "Mudd i umutti '%1' azalen seg umḍan n tazwara armi d amḍan n taggara, s tmerna n usurif yettunefken, sakin selkem tinaḍin yettunefken.";
Blockly.Msg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Rnu tawtilt i yiḥder ma.";
Blockly.Msg["CONTROLS_IF_ELSE_TOOLTIP"] = "Rnu tawtilt taneggarut i yiḥder ma igebren akk tinaḍin.";
Blockly.Msg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg["CONTROLS_IF_IF_TOOLTIP"] = "Rnu, kkes, neq ales asmizzwer n tgezmiyin akken ad talseḍ tawila n yiḥder-a ma.";
Blockly.Msg["CONTROLS_IF_MSG_ELSE"] = "neɣ";
Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"] = "neɣ ma";
Blockly.Msg["CONTROLS_IF_MSG_IF"] = "ma";
Blockly.Msg["CONTROLS_IF_TOOLTIP_1"] = "mayella azal d idetti, ihi selkem kra n tinaḍin.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_2"] = "Mayella azal d idetti, selkem iḥder amezwaru. Neɣ ma ulac, selkem iḥder wis sin.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_3"] = "Mayella azal amezwaru d idetti, selkem iḥder amezwaru. Neɣ ma azal wis sin d ucciḍ, selkem iḥder wis sin.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_4"] = "Mayella azal amezwaru d idetti, selkem iḥder amezwaru. Neɣ, mayella azal wis sin d idetti, selkem iḥder wis sin. Mayella ula d yiwen seg-sen ur yelli d idetti, selkem iḥder aneggaru.";
Blockly.Msg["CONTROLS_REPEAT_HELPURL"] = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"] = "eg";
Blockly.Msg["CONTROLS_REPEAT_TITLE"] = "Ales %1 n tikkal";
Blockly.Msg["CONTROLS_REPEAT_TOOLTIP"] = "Selkem ddeqs n tinaḍin ddeqs n tikal.";
Blockly.Msg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "ales armi";
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "ales skud";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Skud azal d ucciḍ, selkem ihi tinadin.";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Skud azal d idetti, selkem ihi tinadin.";
Blockly.Msg["DELETE_ALL_BLOCKS"] = "Kkes akk %1 n yiḥedran?";
Blockly.Msg["DELETE_BLOCK"] = "Kkes iḥder";
Blockly.Msg["DELETE_VARIABLE"] = "Kkes amutti '%1'";
Blockly.Msg["DELETE_VARIABLE_CONFIRMATION"] = "Kkes %1 n useqdec n umutti '%2'?";
Blockly.Msg["DELETE_X_BLOCKS"] = "Kkes %1 n yiḥedran";
Blockly.Msg["DISABLE_BLOCK"] = "Sens iḥder";
Blockly.Msg["DUPLICATE_BLOCK"] = "Sleg";
Blockly.Msg["DUPLICATE_COMMENT"] = "Sleg awennit";
Blockly.Msg["ENABLE_BLOCK"] = "Sens iḥedran";
Blockly.Msg["ER_ANALOG_IO_DESCRIPTION"] = "Get value of analog IO.<br/>Supports both getting the values of inputs and accessing values of outputs.";  // untranslated
Blockly.Msg["ER_ANALOG_IO_TITLE"] = "Analog IO";  // untranslated
Blockly.Msg["ER_ANALOG_IO_TOOLTIP"] = "Value of Analog IO";  // untranslated
Blockly.Msg["ER_ARM_WAYPOINT_DESCRIPTION"] = "Waypoints can specified as robot joint angles or Cartesian tool configurations";  // untranslated
Blockly.Msg["ER_ARM_WAYPOINT_TITLE"] = "Waypoint for arm";  // untranslated
Blockly.Msg["ER_ARM_WAYPOINT_TOOLTIP"] = "Waypoint for arm";  // untranslated
Blockly.Msg["ER_ARRAY_DESCRIPTION"] = "Array of numbers";  // untranslated
Blockly.Msg["ER_ARRAY_SET_TOOLTIP"] = "Array of numbers";  // untranslated
Blockly.Msg["ER_ARRAY_TITLE"] = "Array";  // untranslated
Blockly.Msg["ER_BARCODE_DETECTOR_DESCRIPTION"] = "Detect a barcode, and save the data in a variable. Supports EAN/UPC, Code 128, Code 39, Interleaved 2 of 5 and QR Codes.";  // untranslated
Blockly.Msg["ER_BARCODE_DETECTOR_TITLE"] = "Barcode detection";  // untranslated
Blockly.Msg["ER_BARCODE_DETECTOR_TOOLTIP"] = "Detect a barcode and save the data in a variable";  // untranslated
Blockly.Msg["ER_BATTERY_POWER_PERCENTAGE_DESCRIPTION"] = "Remaining battery power in percentages";  // untranslated
Blockly.Msg["ER_BATTERY_POWER_PERCENTAGE_TITLE"] = "Battery Power Percentage";  // untranslated
Blockly.Msg["ER_BATTERY_POWER_PERCENTAGE_TOOLTIP"] = "Remaining battery power in percentages";  // untranslated
Blockly.Msg["ER_BOOL_DESCRIPTION"] = "String value";  // untranslated
Blockly.Msg["ER_BOOL_TITLE"] = "String";  // untranslated
Blockly.Msg["ER_BOOL_TOOLTIP"] = "String value";  // untranslated
Blockly.Msg["ER_BOXPATTERN_DESCRIPTION"] = "Defines a set of positions in a box shaped (rectanglar) pattern";  // untranslated
Blockly.Msg["ER_BOXPATTERN_TITLE"] = "Box Pattern";  // untranslated
Blockly.Msg["ER_BOXPATTERN_TOOLTIP"] = "Defines box shaped (rectangular) pattern";  // untranslated
Blockly.Msg["ER_CALIBRATE_TO_MARKER_DESCRIPTION"] = "Specify the type of marker to calibrate to and the reference frame to use.<br/><br/>Once selected press Calibrate To Marker to store the calibration.";  // untranslated
Blockly.Msg["ER_CALIBRATE_TO_MARKER_TITLE"] = "Calibrate to Marker";  // untranslated
Blockly.Msg["ER_CALIBRATE_TO_MARKER_TOOLTIP"] = "Calibrate to a visual marker";  // untranslated
Blockly.Msg["ER_CALL_FUNCTION_BLOCK_DESCRIPTION"] = "Executes the instructions defined in a function block";  // untranslated
Blockly.Msg["ER_CALL_FUNCTION_BLOCK_TITLE"] = "Call Function Block";  // untranslated
Blockly.Msg["ER_CALL_FUNCTION_BLOCK_TOOLTIP"] = "Call Function Block";  // untranslated
Blockly.Msg["ER_CONTROLS_FOR_DESCRIPTION"] = "[INSERT DESCRIPTION]";  // untranslated
Blockly.Msg["ER_CONTROLS_FOR_TITLE"] = "[INSERT TITEL]";  // untranslated
Blockly.Msg["ER_CONTROLS_FOR_TOOLTIP"] = "[INSERT TOOLTIP]";  // untranslated
Blockly.Msg["ER_CONTROLS_IF_DESCRIPTION"] = "If construct with optional 'else if' and 'else'";  // untranslated
Blockly.Msg["ER_CONTROLS_IF_TITLE"] = "If";  // untranslated
Blockly.Msg["ER_CONTROLS_IF_TOOLTIP"] = "If construct with optional 'else if' and 'else'";  // untranslated
Blockly.Msg["ER_CONTROLS_REPEAT_DESCRIPTION"] = "Repeats a set of instruction a number of times";  // untranslated
Blockly.Msg["ER_CONTROLS_REPEAT_TITLE"] = "Repeat";  // untranslated
Blockly.Msg["ER_CONTROLS_REPEAT_TOOLTIP"] = "Repeats a set of instruction a number of times";  // untranslated
Blockly.Msg["ER_CONTROLS_WHILE_DESCRIPTION"] = "[INSERT DESCRIPTION]";  // untranslated
Blockly.Msg["ER_CONTROLS_WHILE_TITLE"] = "[INSERT TITEL]";  // untranslated
Blockly.Msg["ER_CONTROLS_WHILE_TOOLTIP"] = "[INSERT TOOLTIP]";  // untranslated
Blockly.Msg["ER_DIG_IO_DESCRIPTION"] = "Get value of digital IO.<br/>Supports both getting the values of inputs and accessing values of outputs.";  // untranslated
Blockly.Msg["ER_DIG_IO_TITLE"] = "Digital IO";  // untranslated
Blockly.Msg["ER_DIG_IO_TOOLTIP"] = "Value of Digital IO";  // untranslated
Blockly.Msg["ER_DRIVE_TO_CHARGING_STATION_DESCRIPTION"] = "Drive to the specified charging station and start charging";  // untranslated
Blockly.Msg["ER_DRIVE_TO_CHARGING_STATION_TITLE"] = "Drive to Charging Station";  // untranslated
Blockly.Msg["ER_DRIVE_TO_CHARGING_STATION_TOOLTIP"] = "Drive to the specified charging station and start charging";  // untranslated
Blockly.Msg["ER_DRIVE_TO_COORDINATES_DESCRIPTION"] = "Drive to the waypoints defined in the body of the instruction";  // untranslated
Blockly.Msg["ER_DRIVE_TO_COORDINATES_TITLE"] = "Drive to Waypoints ";  // untranslated
Blockly.Msg["ER_DRIVE_TO_COORDINATES_TOOLTIP"] = "Drive to the waypoints defined in the body of the instruction";  // untranslated
Blockly.Msg["ER_DRIVE_TO_DEFINED_POSITION_DESCRIPTION"] = "Drive to a named position defined for the mobile robot";  // untranslated
Blockly.Msg["ER_DRIVE_TO_DEFINED_POSITION_TITLE"] = "Drive to Position";  // untranslated
Blockly.Msg["ER_DRIVE_TO_DEFINED_POSITION_TOOLTIP"] = "Drive to a named position defined for the mobile robot";  // untranslated
Blockly.Msg["ER_FETCH_DELIVER_ITEMS_DESCRIPTION"] = "[INSERT DESCRIPTION]";  // untranslated
Blockly.Msg["ER_FETCH_DELIVER_ITEMS_TITLE"] = "[INSERT TITEL]";  // untranslated
Blockly.Msg["ER_FETCH_DELIVER_ITEMS_TOOLTIP"] = "[INSERT TOOLTIP]";  // untranslated
Blockly.Msg["ER_FETCH_LOCATE_AND_PICK_ITEMS_DESCRIPTION"] = "[INSERT DESCRIPTION]";  // untranslated
Blockly.Msg["ER_FETCH_LOCATE_AND_PICK_ITEMS_TITLE"] = "[INSERT TITEL]";  // untranslated
Blockly.Msg["ER_FETCH_LOCATE_AND_PICK_ITEMS_TOOLTIP"] = "[INSERT TOOLTIP]";  // untranslated
Blockly.Msg["ER_FOR_EACH_DESCRIPTION"] = "[INSERT DESCRIPTION]";  // untranslated
Blockly.Msg["ER_FOR_EACH_TITLE"] = "[INSERT TITEL]";  // untranslated
Blockly.Msg["ER_FOR_EACH_TOOLTIP"] = "[INSERT TOOLTIP]";  // untranslated
Blockly.Msg["ER_FUNCTION_BLOCK_DESCRIPTION"] = "Defines a sequence of instructions which can be called as a function. <br/><br/>The instrutions of the Function Block is called as if they where inlined in the sequence of the caller. Variables are therefore not subject to scope.";  // untranslated
Blockly.Msg["ER_FUNCTION_BLOCK_TITLE"] = "Function Block";  // untranslated
Blockly.Msg["ER_FUNCTION_BLOCK_TOOLTIP"] = "Defines block of instructions";  // untranslated
Blockly.Msg["ER_GRIPPER_MOVE_DESCRIPTION"] = "Open/close gripper to specified configuration";  // untranslated
Blockly.Msg["ER_GRIPPER_MOVE_TITLE"] = "Gripper Open/Close";  // untranslated
Blockly.Msg["ER_GRIPPER_MOVE_TOOLTIP"] = "Gripper Open/Close";  // untranslated
Blockly.Msg["ER_HTTP_REQUEST_DESCRIPTION"] = "Send a http request";  // untranslated
Blockly.Msg["ER_HTTP_REQUEST_TITLE"] = "Http request";  // untranslated
Blockly.Msg["ER_HTTP_REQUEST_TOOLTIP"] = "Send a http request";  // untranslated
Blockly.Msg["ER_INJECT_CODE_DESCRIPTION"] = "[INSERT DESCRIPTION]";  // untranslated
Blockly.Msg["ER_INJECT_CODE_TITLE"] = "[INSERT TITEL]";  // untranslated
Blockly.Msg["ER_INJECT_CODE_TOOLTIP"] = "[INSERT TOOLTIP]";  // untranslated
Blockly.Msg["ER_LOGIC_BOOLEAN_DESCRIPTION"] = "Boolean block, set to either true or false";  // untranslated
Blockly.Msg["ER_LOGIC_BOOLEAN_TITLE"] = "Boolean";  // untranslated
Blockly.Msg["ER_LOGIC_BOOLEAN_TOOLTIP"] = "Boolean, either true or false";  // untranslated
Blockly.Msg["ER_LOGIC_COMPARE_DESCRIPTION"] = "Performs a logic comparison of two values. <br/><br/>Select which type of comparison to perform.<br><br>Assumes that the left and right hand sides of the comparison has identical data types.";  // untranslated
Blockly.Msg["ER_LOGIC_COMPARE_TITLE"] = "Compare";  // untranslated
Blockly.Msg["ER_LOGIC_COMPARE_TOOLTIP"] = "Logical comparison";  // untranslated
Blockly.Msg["ER_LOGIC_NEGATE_DESCRIPTION"] = "Negates boolean value";  // untranslated
Blockly.Msg["ER_LOGIC_NEGATE_TITLE"] = "Negates boolean value";  // untranslated
Blockly.Msg["ER_LOGIC_NEGATE_TOOLTIP"] = "Negates boolean value";  // untranslated
Blockly.Msg["ER_LOGIC_OPERATION_DESCRIPTION"] = "Performs a logic operation of two boolean expression. <br/><br/>Select which type of operation to perform.";  // untranslated
Blockly.Msg["ER_LOGIC_OPERATION_TITLE"] = "Logic Operation";  // untranslated
Blockly.Msg["ER_LOGIC_OPERATION_TOOLTIP"] = "Logic Operation";  // untranslated
Blockly.Msg["ER_MATH_NUMBER_DESCRIPTION"] = "A number data type";  // untranslated
Blockly.Msg["ER_MATH_NUMBER_TITLE"] = "Number";  // untranslated
Blockly.Msg["ER_MATH_NUMBER_TOOLTIP"] = "A number data type";  // untranslated
Blockly.Msg["ER_MIR_COORDINATES_DESCRIPTION"] = "Position (X, Y) in meter and orientation (Angle) in degrees";  // untranslated
Blockly.Msg["ER_MIR_COORDINATES_TITLE"] = "Position";  // untranslated
Blockly.Msg["ER_MIR_COORDINATES_TOOLTIP"] = "Position (X, Y) in meter and orientation (Angle) in degrees";  // untranslated
Blockly.Msg["ER_MIR_MISSIONS_DESCRIPTION"] = "Execute MiR mission defined in the MiR interface";  // untranslated
Blockly.Msg["ER_MIR_MISSIONS_TITLE"] = "Execute MiR mission";  // untranslated
Blockly.Msg["ER_MIR_MISSIONS_TOOLTIP"] = "Executes a MiR mission from the MiR interface";  // untranslated
Blockly.Msg["ER_MIR_VAR_GET_DESCRIPTION"] = "[INSERT DESCRIPTION]";  // untranslated
Blockly.Msg["ER_MIR_VAR_GET_TITLE"] = "[INSERT TITEL]";  // untranslated
Blockly.Msg["ER_MIR_VAR_GET_TOOLTIP"] = "[INSERT TOOLTIP]";  // untranslated
Blockly.Msg["ER_MIR_VAR_SET_DESCRIPTION"] = "[INSERT DESCRIPTION]";  // untranslated
Blockly.Msg["ER_MIR_VAR_SET_TITLE"] = "[INSERT TITEL]";  // untranslated
Blockly.Msg["ER_MIR_VAR_SET_TOOLTIP"] = "[INSERT TOOLTIP]";  // untranslated
Blockly.Msg["ER_MOBILE_WAYPOINT_DESCRIPTION"] = "Position (X, Y) and orientation for the mobile platform";  // untranslated
Blockly.Msg["ER_MOBILE_WAYPOINT_TITLE"] = "Waypoint for mobile platform";  // untranslated
Blockly.Msg["ER_MOBILE_WAYPOINT_TOOLTIP"] = "Position (X, Y) and orientation for the mobile platform";  // untranslated
Blockly.Msg["ER_PALLETIZE_DESCRIPTION"] = "The Palletize block runs a sequence of instruction for the specified amount locations specified in a pattern. </br> If a pattern is shared as a variable among multiple Palletize blocks the pattern will keep track of the next location to apply.";  // untranslated
Blockly.Msg["ER_PALLETIZE_TITLE"] = "Palletize";  // untranslated
Blockly.Msg["ER_PALLETIZE_TOOLTIP"] = "Runs a sequence of instructions in a given pattern";  // untranslated
Blockly.Msg["ER_POPUP_DESCRIPTION"] = "Popup message with true/false return value";  // untranslated
Blockly.Msg["ER_POPUP_TITLE"] = "Popup";  // untranslated
Blockly.Msg["ER_POPUP_TOOLTIP"] = "Popup message with true/false return value";  // untranslated
Blockly.Msg["ER_PROGRAM_DESCRIPTION"] = "Defines program to be executed. ";  // untranslated
Blockly.Msg["ER_PROGRAM_TITLE"] = "Program";  // untranslated
Blockly.Msg["ER_PROGRAM_TOOLTIP"] = "Defines program to be executed";  // untranslated
Blockly.Msg["ER_Q_DESCRIPTION"] = "Configuration of the robot arm specified by joint angles. All angles specified in degrees.";  // untranslated
Blockly.Msg["ER_Q_TITLE"] = "Joint Configuration";  // untranslated
Blockly.Msg["ER_Q_TOOLTIP"] = "Configuration of the robot arm specified by joint angles. All angles specified in degrees.";  // untranslated
Blockly.Msg["ER_Q_VAR_DESCRIPTION"] = "[INSERT DESCRIPTION]";  // untranslated
Blockly.Msg["ER_Q_VAR_TITLE"] = "[INSERT TITEL]";  // untranslated
Blockly.Msg["ER_Q_VAR_TOOLTIP"] = "[INSERT TOOLTIP]";  // untranslated
Blockly.Msg["ER_SET_ACTIVE_TOOL_DESCRIPTION"] = "Sets the tool to be used when having selected <it>Active Tool</it>.";  // untranslated
Blockly.Msg["ER_SET_ACTIVE_TOOL_TITLE"] = "Set Active Tool";  // untranslated
Blockly.Msg["ER_SET_ACTIVE_TOOL_TOOLTIP"] = "Set the Active Tool of the arm";  // untranslated
Blockly.Msg["ER_SET_ANALOG_OUTPUT_DESCRIPTION"] = "Set value of analog output.";  // untranslated
Blockly.Msg["ER_SET_ANALOG_OUTPUT_TITLE"] = "Set Analog Output";  // untranslated
Blockly.Msg["ER_SET_ANALOG_OUTPUT_TOOLTIP"] = "Set value of analog output";  // untranslated
Blockly.Msg["ER_SET_DIGITAL_OUTPUT_DESCRIPTION"] = "Set value of digital output.";  // untranslated
Blockly.Msg["ER_SET_DIGITAL_OUTPUT_TITLE"] = "Set Digital Output";  // untranslated
Blockly.Msg["ER_SET_DIGITAL_OUTPUT_TOOLTIP"] = "Set value of digital output";  // untranslated
Blockly.Msg["ER_SET_PAYLOAD_DESCRIPTION"] = "To set the payload of the arm two parameters needs to be given. <br/> 1) The actual payload measured in kg and <br/>2) The position [x,y,z] (in meters) of the Center of Mass (CoM) of the payload. The position is to be measured relative to the toolmount frame and NOT the  TCP frame.";  // untranslated
Blockly.Msg["ER_SET_PAYLOAD_TITLE"] = "Set Payload";  // untranslated
Blockly.Msg["ER_SET_PAYLOAD_TOOLTIP"] = "Set the payload of the arm";  // untranslated
Blockly.Msg["ER_SET_REFERENCE_DESCRIPTION"] = "Set value of reference. <br/><br/>If reference does not already exists a new reference is created.";  // untranslated
Blockly.Msg["ER_SET_REFERENCE_TITLE"] = "Set Reference";  // untranslated
Blockly.Msg["ER_SET_REFERENCE_TOOLTIP"] = "Set value of reference";  // untranslated
Blockly.Msg["ER_SET_TCP_DESCRIPTION"] = "Sets the transformation between the tool flange (the end) of the robot arm and the actual TCP. <br/> Changing the TCP in the program will offset all movements specified relative to the TCP. Movements specified in joint angles will not be impacted.";  // untranslated
Blockly.Msg["ER_SET_TCP_TITLE"] = "Set TCP";  // untranslated
Blockly.Msg["ER_SET_TCP_TOOLTIP"] = "Set the TCP of the robot";  // untranslated
Blockly.Msg["ER_SQL_INSTANCE_DESCRIPTION"] = "[INSERT DESCRIPTION]";  // untranslated
Blockly.Msg["ER_SQL_INSTANCE_TITLE"] = "[INSERT TITEL]";  // untranslated
Blockly.Msg["ER_SQL_INSTANCE_TOOLTIP"] = "[INSERT TOOLTIP]";  // untranslated
Blockly.Msg["ER_SQL_QUERY_DESCRIPTION"] = "[INSERT DESCRIPTION]";  // untranslated
Blockly.Msg["ER_SQL_QUERY_TITLE"] = "[INSERT TITEL]";  // untranslated
Blockly.Msg["ER_SQL_QUERY_TOOLTIP"] = "[INSERT TOOLTIP]";  // untranslated
Blockly.Msg["ER_START_UR_PROGRAM_DESCRIPTION"] = "Start program on the UR";  // untranslated
Blockly.Msg["ER_START_UR_PROGRAM_TITLE"] = "Start UR Program";  // untranslated
Blockly.Msg["ER_START_UR_PROGRAM_TOOLTIP"] = "Start program on the UR";  // untranslated
Blockly.Msg["ER_STRING_DESCRIPTION"] = "String value";  // untranslated
Blockly.Msg["ER_STRING_TITLE"] = "String";  // untranslated
Blockly.Msg["ER_STRING_TOOLTIP"] = "String value";  // untranslated
Blockly.Msg["ER_THROW_DESCRIPTION"] = "Throws an error message, which can be caught by the Try-Catch block.";  // untranslated
Blockly.Msg["ER_THROW_TITLE"] = "Throw";  // untranslated
Blockly.Msg["ER_THROW_TOOLTIP"] = "Throws an error message.";  // untranslated
Blockly.Msg["ER_TRY_CATCH_DESCRIPTION"] = "Try Catch structure enabling catching errors produced by the code in the Try section. <br/><br/>Only if an error is triggered the instructions specified within the Catch section is executed";  // untranslated
Blockly.Msg["ER_TRY_CATCH_TITLE"] = "Try Catch";  // untranslated
Blockly.Msg["ER_TRY_CATCH_TOOLTIP"] = "Try Catch structure";  // untranslated
Blockly.Msg["ER_UR_ACTION_DESCRIPTION"] = "Execute the specified event on the UR.<br/><br/>The name of the event shall match the name of an EventNode specific under the ER-Ability node. <br/><br/> Parameters allows passing up to 20 numbers to the event";  // untranslated
Blockly.Msg["ER_UR_ACTION_TITLE"] = "Execute Event on UR";  // untranslated
Blockly.Msg["ER_UR_ACTION_TOOLTIP"] = "Execute the specified event on the UR";  // untranslated
Blockly.Msg["ER_UR_GOTO_DESCRIPTION"] = "Move robot in joint-space.<br/><br/>The motion is defined by the set of specified way points.";  // untranslated
Blockly.Msg["ER_UR_GOTO_LIN_DESCRIPTION"] = "Move robot linear in tool space.<br/><br/>The motion is defined by the set of specified way points.";  // untranslated
Blockly.Msg["ER_UR_GOTO_LIN_TITLE"] = "Move Linear";  // untranslated
Blockly.Msg["ER_UR_GOTO_LIN_TOOLTIP"] = "Move robot linear in tool space";  // untranslated
Blockly.Msg["ER_UR_GOTO_TITLE"] = "Move PTP";  // untranslated
Blockly.Msg["ER_UR_GOTO_TOOLTIP"] = "Move robot in joint-space";  // untranslated
Blockly.Msg["ER_UR_MOTION_DESCRIPTION"] = "UR motion";  // untranslated
Blockly.Msg["ER_UR_MOTION_TITLE"] = "UR motion";  // untranslated
Blockly.Msg["ER_UR_MOTION_TOOLTIP"] = "UR motion";  // untranslated
Blockly.Msg["ER_UR_MOVE_REL_DESCRIPTION"] = "Move relative to a reference frame";  // untranslated
Blockly.Msg["ER_UR_MOVE_REL_TITLE"] = "Move relative";  // untranslated
Blockly.Msg["ER_UR_MOVE_REL_TOOLTIP"] = "Move relative";  // untranslated
Blockly.Msg["ER_VAR_GET_DESCRIPTION"] = "Get value of variable. <br/><br/>The value and type of the variable is not defined before the instruction is executed.";  // untranslated
Blockly.Msg["ER_VAR_GET_TITLE"] = "Get variable.";  // untranslated
Blockly.Msg["ER_VAR_GET_TOOLTIP"] = "Get value of variable.";  // untranslated
Blockly.Msg["ER_VAR_SET_DESCRIPTION"] = "Set value of variable";  // untranslated
Blockly.Msg["ER_VAR_SET_TITLE"] = "Set Variable";  // untranslated
Blockly.Msg["ER_VAR_SET_TOOLTIP"] = "Set value of variable";  // untranslated
Blockly.Msg["ER_WAIT_DESCRIPTION"] = "Wait for the specified time before continuing execution";  // untranslated
Blockly.Msg["ER_WAIT_FOR_IO_DESCRIPTION"] = "Specify which I/O to wait for by inserting I/O elements in the list";  // untranslated
Blockly.Msg["ER_WAIT_FOR_IO_TITLE"] = "Wait for I/O";  // untranslated
Blockly.Msg["ER_WAIT_TITLE"] = "Wait";  // untranslated
Blockly.Msg["ER_WAIT_TOOLTIP"] = "Wait for defined time";  // untranslated
Blockly.Msg["ER_WAIT_UNTIL_DESCRIPTION"] = "Waits until a condition is met";  // untranslated
Blockly.Msg["ER_WAIT_UNTIL_TITLE"] = "Wait until";  // untranslated
Blockly.Msg["ER_WAIT_UNTIL_TOOLTIP"] = "Wait until condition";  // untranslated
Blockly.Msg["ER_XYZRPY_DESCRIPTION"] = "Position and orientation of the specified tool in the selected reference frame. <br/><br/> Position are in meters. Orientation specified as ZYX Euler Angles and measured in degrees";  // untranslated
Blockly.Msg["ER_XYZRPY_TITLE"] = "Tool Configuration";  // untranslated
Blockly.Msg["ER_XYZRPY_TOOLTIP"] = "Position and orientation of the tool";  // untranslated
Blockly.Msg["EXPAND_ALL"] = "Snefli iḥedran";
Blockly.Msg["EXPAND_BLOCK"] = "Snefli iḥder";
Blockly.Msg["EXTERNAL_INPUTS"] = "Inekcam izɣarayen";
Blockly.Msg["HELP"] = "Tallelt";
Blockly.Msg["INLINE_INPUTS"] = "Inekcam srid";
Blockly.Msg["IOS_CANCEL"] = "Sefsex";
Blockly.Msg["IOS_ERROR"] = "Tuccḍa";
Blockly.Msg["IOS_OK"] = "IH";
Blockly.Msg["IOS_PROCEDURES_ADD_INPUT"] = "+ Rnu anekcum";
Blockly.Msg["IOS_PROCEDURES_ALLOW_STATEMENTS"] = "Sireg asmizzwer";
Blockly.Msg["IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR"] = "Tawuri-a ɣur-s inekcam imsinen.";
Blockly.Msg["IOS_PROCEDURES_INPUTS"] = "INEKCAM";
Blockly.Msg["IOS_VARIABLES_ADD_BUTTON"] = "Rnu";
Blockly.Msg["IOS_VARIABLES_ADD_VARIABLE"] = "+ Rnu amutti";
Blockly.Msg["IOS_VARIABLES_DELETE_BUTTON"] = "Kkes";
Blockly.Msg["IOS_VARIABLES_EMPTY_NAME_ERROR"] = "Ur tezmireḍ ara ad tesqedceḍ isem n umutti amaynut.";
Blockly.Msg["IOS_VARIABLES_RENAME_BUTTON"] = "Snifel isem";
Blockly.Msg["IOS_VARIABLES_VARIABLE_NAME"] = "Isem n umutti";
Blockly.Msg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg["LISTS_CREATE_EMPTY_TITLE"] = "rnu tabdart tilemt";
Blockly.Msg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Ad d-yerr tabdart n teɣzi 0 ur yegbiren ara ikalasen";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "tabdart";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Rnu, kkes, neɣ ales asmizzwer n tgezmiyin akken ad talseḍ tawila n yiḥder-a n tebdart.";
Blockly.Msg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg["LISTS_CREATE_WITH_INPUT_WITH"] = "rnu tabdart s";
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Ad yernu aferdis ɣer tebdart.";
Blockly.Msg["LISTS_CREATE_WITH_TOOLTIP"] = "Ad yernu tabdart s umḍan n yiferdisen.";
Blockly.Msg["LISTS_GET_INDEX_FIRST"] = "amezwaru";
Blockly.Msg["LISTS_GET_INDEX_FROM_END"] = "# si taggara";
Blockly.Msg["LISTS_GET_INDEX_FROM_START"] = "#";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_GET"] = "awi";
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE"] = "awi rnu kkes";
Blockly.Msg["LISTS_GET_INDEX_LAST"] = "aneggaru";
Blockly.Msg["LISTS_GET_INDEX_RANDOM"] = "agacuran";
Blockly.Msg["LISTS_GET_INDEX_REMOVE"] = "kkes";
Blockly.Msg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Ad d-yerr aferdis amezwaru n tebdart.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Ad d-yerr aferdis n wadig yettwamlen deg tabdart.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Ad d-yerr aferdis aneggaru di tebdart.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Ad yerr aferdis agacuran di tebdart.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Ad yekkes sakin ad -yerr aferdis amezwaru di tebdart.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Ad yekkes syin ad d-yerr aferdis n wadig yettwamlen deg tabdart.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Ad yekkes sakin ad yerr aferdis aneggaru di tebdart.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Ad yekkes sakin ad d-yerr aferdis agacuran di tebdart.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Ad yekkes aferdis amezwaru n tebdart.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Ad yekkes aferdis n wadig yettwamlen deg tabdart.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Ad yekkes aferdis aneggaru di tebdart.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Ad yekkes aferdis agacuran di tebdart.";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_END"] = "ar # si tagara";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_START"] = "ar #";
Blockly.Msg["LISTS_GET_SUBLIST_END_LAST"] = "ar tagara";
Blockly.Msg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_START_FIRST"] = "awi-d tabdart tasnawant si tazwara";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_END"] = "awi-d tabdart tasnawant seg # si taggara";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_START"] = "awi-d tabdart tasnawant seg #";
Blockly.Msg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_TOOLTIP"] = "Ad yernu anɣel n uḥric yettwammlen n tebdart.";
Blockly.Msg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 d aferdis aneggaru.";
Blockly.Msg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 d aferdis amezwaru.";
Blockly.Msg["LISTS_INDEX_OF_FIRST"] = "af-d timeḍriwt tamezwarut n uferdis";
Blockly.Msg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_LAST"] = "af-d timeḍriwt taneggarut n uferdis";
Blockly.Msg["LISTS_INDEX_OF_TOOLTIP"] = "Ad d-yerr amatar n tmeḍriwt tamezwarut/taneggarut n uferdis amezwaru deg tebdart. Ad d-yerr %1 ma yella ulac aferdis.";
Blockly.Msg["LISTS_INLIST"] = "di tebdart";
Blockly.Msg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg["LISTS_ISEMPTY_TITLE"] = "%1 d ilem";
Blockly.Msg["LISTS_ISEMPTY_TOOLTIP"] = "Ad d-yerr idetti mayella tabdart d tilemt.";
Blockly.Msg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg["LISTS_LENGTH_TITLE"] = "teɣzi n %1";
Blockly.Msg["LISTS_LENGTH_TOOLTIP"] = "Ad d-yerr teɣzi n tebdart.";
Blockly.Msg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg["LISTS_REPEAT_TITLE"] = "ad yernu tabdart s uferdis %1 s tmeḍriwt %2";
Blockly.Msg["LISTS_REPEAT_TOOLTIP"] = "Ad yernu tabdart inetmen n wazal yettunefken ddeqs n tikal s umḍan yettwammlen.";
Blockly.Msg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
Blockly.Msg["LISTS_REVERSE_MESSAGE0"] = "tti %1";
Blockly.Msg["LISTS_REVERSE_TOOLTIP"] = "Tti anɣel n tebdart.";
Blockly.Msg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_INPUT_TO"] = "am";
Blockly.Msg["LISTS_SET_INDEX_INSERT"] = "ger s";
Blockly.Msg["LISTS_SET_INDEX_SET"] = "sbadu";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Ad iger aferdis di tazwara n tebdart.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Ad iger aferdis n wadig yettwamlen deg tabdart.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Ad yernu aferdis ar taggara n  tebdart.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Ad iger aferdis s wudem agacuran deg tebdart.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Ad d-yerr aferdis amezwaru di tebdart.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Ad yesbadu aferdis n wadig yettwamlen deg tabdart.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Ad d-yerr aferdis aneggaru di tebdart.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Ad yesbadu aferdis agacuran di tebdart.";
Blockly.Msg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg["LISTS_SORT_ORDER_ASCENDING"] = "igemmen";
Blockly.Msg["LISTS_SORT_ORDER_DESCENDING"] = "amnusruy";
Blockly.Msg["LISTS_SORT_TITLE"] = "smizzwer %1 %2 %3";
Blockly.Msg["LISTS_SORT_TOOLTIP"] = "Smizzwer anɣel n tebdart.";
Blockly.Msg["LISTS_SORT_TYPE_IGNORECASE"] = "agemmayan, anef i truẓi n usekkil";
Blockly.Msg["LISTS_SORT_TYPE_NUMERIC"] = "umḍin";
Blockly.Msg["LISTS_SORT_TYPE_TEXT"] = "agemmayan";
Blockly.Msg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT"] = "rnu tabdart seg uḍris";
Blockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST"] = "rnu aḍris si tebdart";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_JOIN"] = "ad yesdukel tabdart n yiḍrisen deg iwen s usnabraz.";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Ad yegzem aḍris ɣef ddeqs n tebdarin n yoiḍrisen, s unegzum yal anabraz.";
Blockly.Msg["LISTS_SPLIT_WITH_DELIMITER"] = "s unabraz";
Blockly.Msg["LOGIC_BOOLEAN_FALSE"] = "ucciḍ";
Blockly.Msg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg["LOGIC_BOOLEAN_TOOLTIP"] = "Ad d-yerr idetti neɣ ucciḍ";
Blockly.Msg["LOGIC_BOOLEAN_TRUE"] = "idetti";
Blockly.Msg["LOGIC_COMPARE_HELPURL"] = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Ad yerr idetti ma yella i sin n yinekcam d imegduya.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GT"] = "Ad d-yerr idetti ma anekcam amezwaru meqqer ɣef wis sin.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Ad d-yerr idetti ma anekcam amezwaru meqqer neɣ yegda wis sin.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LT"] = "Ad d-yerr idetti ma anekcam amezwaru meẓẓiy ɣef wis sin.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Ad d-yerr idetti ma anekcam amezwaru meẓẓiy neɣ yegda wis sin.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Ad d-yerr idetti mayella i sin n yinekcam mačči d imegduya.";
Blockly.Msg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg["LOGIC_NEGATE_TITLE"] = "mačči %1";
Blockly.Msg["LOGIC_NEGATE_TOOLTIP"] = "Ad d-yerr idetti ma anekcam d ucciḍ. Ad d-yerr ucciḍ ma yella anekcam d idetti.";
Blockly.Msg["LOGIC_NULL"] = "Ilem";
Blockly.Msg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg["LOGIC_NULL_TOOLTIP"] = "Ad d-yerr ilem";
Blockly.Msg["LOGIC_OPERATION_AND"] = "akked";
Blockly.Msg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg["LOGIC_OPERATION_OR"] = "neɣ";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_AND"] = "Ad d-yerr idetti ma inekcam d idettiyen.";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_OR"] = "Ad d-yerr idetti ma ɣarsum yiwen seg yinekcam d idetti.";
Blockly.Msg["LOGIC_TERNARY_CONDITION"] = "sekyed";
Blockly.Msg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg["LOGIC_TERNARY_IF_FALSE"] = "ma d ucciḍ";
Blockly.Msg["LOGIC_TERNARY_IF_TRUE"] = "ma d idetti";
Blockly.Msg["LOGIC_TERNARY_TOOLTIP"] = "Senqed tawtilt deg 'sekyed'. Ma d idetti, ad d-yerr azal 'ma idetti', ma ulac ad d-yerr azam 'ma ucciḍ'.";
Blockly.Msg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_HELPURL"] = "https://en.wikipedia.org/wiki/Arithmetic";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Ad d-yerr tmerni n sin n yimiḍanen.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Ad d-yerr aful n sin n yimḍanen.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Ad d-yerr tmernit n sin n yimiḍanen.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Ad d-yerr tukksa gar sin n yimiḍanen.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Ad d-yerr amḍan amezwaru uzmir wis sin.";
Blockly.Msg["MATH_ATAN2_HELPURL"] = "https://kab.wikipedia.org/wiki/Atan2";
Blockly.Msg["MATH_ATAN2_TITLE"] = "atan2 seg X:%1 Y:%2";
Blockly.Msg["MATH_ATAN2_TOOLTIP"] = "Ad d-yerr arctangent n waggaz (X, Y) s tfesniwin deg -180 ɣer 180.";
Blockly.Msg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg["MATH_CHANGE_TITLE"] = "snifel %1 s %2";
Blockly.Msg["MATH_CHANGE_TOOLTIP"] = "Rnu amḍan i umutti '%1'.";
Blockly.Msg["MATH_CONSTANT_HELPURL"] = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg["MATH_CONSTANT_TOOLTIP"] = "Ad d-yerr yiwet seg tmezgiyin yettwasnen : π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), neɣ ∞ (ifeḍ).";
Blockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
Blockly.Msg["MATH_CONSTRAIN_TITLE"] = "Err tamara i %1 gar %2 akked %3";
Blockly.Msg["MATH_CONSTRAIN_TOOLTIP"] = "Err tamara n umḍan akken ad yili gar snat n tlisa (ddant).";
Blockly.Msg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
Blockly.Msg["MATH_IS_DIVISIBLE_BY"] = "d ubṭay ɣef";
Blockly.Msg["MATH_IS_EVEN"] = "d ayugan";
Blockly.Msg["MATH_IS_NEGATIVE"] = "d uzdir";
Blockly.Msg["MATH_IS_ODD"] = "d aryugan";
Blockly.Msg["MATH_IS_POSITIVE"] = "d ufrar";
Blockly.Msg["MATH_IS_PRIME"] = "d amenzu";
Blockly.Msg["MATH_IS_TOOLTIP"] = "Senqed ma amḍan d ayugan, d aryugan, d amenzu, d ummid, d ufrar, d uzdir, neɣ d ubṭay ɣef kra n umḍan. Ad d-yerr idetti neɣ ucciḍ.";
Blockly.Msg["MATH_IS_WHOLE"] = "d ummid";
Blockly.Msg["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg["MATH_MODULO_TITLE"] = "tasagert n %1 ÷ %2";
Blockly.Msg["MATH_MODULO_TOOLTIP"] = "Ad d-yerr tasagert n beṭṭu n sin n yimḍanen.";
Blockly.Msg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
Blockly.Msg["MATH_NUMBER_HELPURL"] = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg["MATH_NUMBER_TOOLTIP"] = "Amḍan.";
Blockly.Msg["MATH_ONLIST_HELPURL"] = "";  // untranslated
Blockly.Msg["MATH_ONLIST_OPERATOR_AVERAGE"] = "talemmast n tebdart";
Blockly.Msg["MATH_ONLIST_OPERATOR_MAX"] = "afellay n tebdart";
Blockly.Msg["MATH_ONLIST_OPERATOR_MEDIAN"] = "tanammast n tebdart";
Blockly.Msg["MATH_ONLIST_OPERATOR_MIN"] = "adday n tebdart";
Blockly.Msg["MATH_ONLIST_OPERATOR_MODE"] = "Tiggtiwin n tebdart";
Blockly.Msg["MATH_ONLIST_OPERATOR_RANDOM"] = "aferdis agacuran n tebdart";
Blockly.Msg["MATH_ONLIST_OPERATOR_STD_DEV"] = "azza n tebdart";
Blockly.Msg["MATH_ONLIST_OPERATOR_SUM"] = "Timernit n tebdart";
Blockly.Msg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Ad d-yerr talemmas( tasnamḍant) n wazalen umḍinen di tebdart.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MAX"] = "Ad d-yerr amḍan  ameqqran di tebdart.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Ad d-yerr amḍan n unammas n tebdart.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MIN"] = "Ad d-yerr amḍan  ameẓẓyan di tebdart.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MODE"] = "Ad d-yerr tabdart n yiferdisen i d-yettuɣalen s waṭas di tebdart.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Ad d-yerr aferdis seg tebdart s wudem agacuran.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Ad d-yerr azza n tebdart.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_SUM"] = "Ad d-yerr timernit n yimḍanen meṛṛa deg tebdart.";
Blockly.Msg["MATH_POWER_SYMBOL"] = "^";  // untranslated
Blockly.Msg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "tirẓi tagacurant";
Blockly.Msg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Ad d-yerr tirẓi tagacurant gar 0.0 (yedda) akked 1.0 (ur yeddi ara).";
Blockly.Msg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg["MATH_RANDOM_INT_TITLE"] = "ummid agacuran gar %1 akked %2";
Blockly.Msg["MATH_RANDOM_INT_TOOLTIP"] = "Ad d-yerr ummid agacuran gar snat n tlisa, ddant.";
Blockly.Msg["MATH_ROUND_HELPURL"] = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUND"] = "Saẓ";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "Saẓ d akesser";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDUP"] = "Saẓ d asawen";
Blockly.Msg["MATH_ROUND_TOOLTIP"] = "Saẓ amiḍan d asawen neɣ d akesser.";
Blockly.Msg["MATH_SINGLE_HELPURL"] = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg["MATH_SINGLE_OP_ABSOLUTE"] = "azal amagdez";
Blockly.Msg["MATH_SINGLE_OP_ROOT"] = "aẓar uzmir 2";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ABS"] = "Ad d-yerr azal amagdez n umiḍan.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_EXP"] = "Ad d-yerr e uzmir amiḍan.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LN"] = "Ad d-yerr alugaritm agamawan n umiḍan.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LOG10"] = "Ad d-yerr alugaritm 10 n umiḍan.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_NEG"] = "Ad d-yerr ugmiḍ n umḍan.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_POW10"] = "Ad d-yerr 10 uzmir amiḍan.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ROOT"] = "Ad d-yerr aẓar uzmir sin n umḍan.";
Blockly.Msg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
Blockly.Msg["MATH_TRIG_ACOS"] = "acos";  // untranslated
Blockly.Msg["MATH_TRIG_ASIN"] = "asin";  // untranslated
Blockly.Msg["MATH_TRIG_ATAN"] = "atan";  // untranslated
Blockly.Msg["MATH_TRIG_COS"] = "cos";  // untranslated
Blockly.Msg["MATH_TRIG_HELPURL"] = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg["MATH_TRIG_SIN"] = "sin";  // untranslated
Blockly.Msg["MATH_TRIG_TAN"] = "tan";  // untranslated
Blockly.Msg["MATH_TRIG_TOOLTIP_ACOS"] = "Ad d-yerr taganzi n ukusinus n umḍan.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ASIN"] = "Ad d-yerr taganzi n usinus n umḍan.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ATAN"] = "Ad d-yerr taganzi n teslayt n umiḍan.";
Blockly.Msg["MATH_TRIG_TOOLTIP_COS"] = "Ad d-yerr akusinus n teɣmert s tfesna (mačči aṛadyan).";
Blockly.Msg["MATH_TRIG_TOOLTIP_SIN"] = "Ad d-yerr asinus n teɣmert s tfesna (mačči aṛadyan).";
Blockly.Msg["MATH_TRIG_TOOLTIP_TAN"] = "Ad d-yerr taslayt n teɣmert s tfesna (mačči aṛadyan).";
Blockly.Msg["NEW_COLOUR_VARIABLE"] = "Rnu amutti ini...";
Blockly.Msg["NEW_NUMBER_VARIABLE"] = "Rnu amutti amḍan...";
Blockly.Msg["NEW_STRING_VARIABLE"] = "Rnu amutti azrir n yisekkilen...";
Blockly.Msg["NEW_VARIABLE"] = "Rnu amutti...";
Blockly.Msg["NEW_VARIABLE_TITLE"] = "Isem amaynut n wazal:";
Blockly.Msg["NEW_VARIABLE_TYPE_TITLE"] = "Anaw amaynut n umutti:";
Blockly.Msg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
Blockly.Msg["PROCEDURES_ALLOW_STATEMENTS"] = "Sireg asmizzwer";
Blockly.Msg["PROCEDURES_BEFORE_PARAMS"] = "s:";
Blockly.Msg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";
Blockly.Msg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Selkem tawuri '%1' yesbadu u seqdac.";
Blockly.Msg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";
Blockly.Msg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Selkem tawuri '%1' yesbadu useqdace sakin seqdec agmuḍ-is.";
Blockly.Msg["PROCEDURES_CALL_BEFORE_PARAMS"] = "s:";
Blockly.Msg["PROCEDURES_CREATE_DO"] = "rnu '%1'";
Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"] = "Seglem tawuri-agi...";
Blockly.Msg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "eg kra";
Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"] = "i";
Blockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Rnu tawuri s war anekcam.";
Blockly.Msg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
Blockly.Msg["PROCEDURES_DEFRETURN_RETURN"] = "tuɣalin";
Blockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"] = "ad yernu tawuri s tuffɣa.";
Blockly.Msg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Ɣur-k: Tawuri-agi ɣur-s iɣewwaṛen usligen.";
Blockly.Msg["PROCEDURES_HIGHLIGHT_DEF"] = "Sebruṛeq tabadut n twuri";
Blockly.Msg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg["PROCEDURES_IFRETURN_TOOLTIP"] = "ma yella azal d idetti, ad d-yerr azal-nniḍen wis sin.";
Blockly.Msg["PROCEDURES_IFRETURN_WARNING"] = "Ɣur-k: Iḥder-agi yezmer ur yettwaseqdac ara ala di tebadut n twuri-agi.";
Blockly.Msg["PROCEDURES_MUTATORARG_TITLE"] = "isem n unekcum:";
Blockly.Msg["PROCEDURES_MUTATORARG_TOOLTIP"] = "rnu anekcam ar twuri-agi.";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "inekcam";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Rnu, kkes neɣ ales asmizzwer n inekcam i twuri-agi.";
Blockly.Msg["REDO"] = "Uɣal";
Blockly.Msg["REMOVE_COMMENT"] = "Kkes awennit";
Blockly.Msg["RENAME_VARIABLE"] = "Beddel isem n umutti...";
Blockly.Msg["RENAME_VARIABLE_TITLE"] = "Beddel akk isem n yimuttiyen '%1' ar:";
Blockly.Msg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_APPEND_TITLE"] = "Rnu aḍris %2 ɣer %1";
Blockly.Msg["TEXT_APPEND_TOOLTIP"] = "Rnu aḍris ɣer umutti '%1'.";
Blockly.Msg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "s usekkil ameẓẓyan";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "s Umeqqran Di Tazwara n Yal Awal.";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "s USEKKIL AMEQQRAN";
Blockly.Msg["TEXT_CHANGECASE_TOOLTIP"] = "Ad d-yerr anɣel n uḍris s truẓi-nniḍen.";
Blockly.Msg["TEXT_CHARAT_FIRST"] = "awi-d asekkil amezwaru";
Blockly.Msg["TEXT_CHARAT_FROM_END"] = "awi-d asekkil # si taggara";
Blockly.Msg["TEXT_CHARAT_FROM_START"] = "awi asekkel #";
Blockly.Msg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg["TEXT_CHARAT_LAST"] = "awi-d asekkil aneggaru";
Blockly.Msg["TEXT_CHARAT_RANDOM"] = "awi-d asekkil s wudem agacuran";
Blockly.Msg["TEXT_CHARAT_TAIL"] = "";  // untranslated
Blockly.Msg["TEXT_CHARAT_TITLE"] = "deg uḍris %1 %2";
Blockly.Msg["TEXT_CHARAT_TOOLTIP"] = "Ad d-yerr asekkil deg wuṭṭun yettwamlen.";
Blockly.Msg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
Blockly.Msg["TEXT_COUNT_MESSAGE0"] = "amḍan %1 ɣef %2";
Blockly.Msg["TEXT_COUNT_TOOLTIP"] = "Ad isiḍen amḍan n tmeḍriwt n uḍris deg wayeḍ.";
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Rnu aferdis ɣer uḍris.";
Blockly.Msg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "sdukkel";
Blockly.Msg["TEXT_CREATE_JOIN_TOOLTIP"] = "Rnu, kkes, neɣ ales asmizzwer n tgezmiyin akken ad talseḍ tawila n yiḥder-a.";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END"] = "armi d asekkil # si taggara";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START"] = "armi d asekkil #";
Blockly.Msg["TEXT_GET_SUBSTRING_END_LAST"] = "armi d asekkil aneggaru";
Blockly.Msg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "deg uḍris";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FIRST"] = "awi-d azrir asnawan seg usekkil amezwaru";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END"] = "awi-d azrir asnawan seg usekkil # si taggara";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START"] = "awi-d azrir asnawan seg usekkil #";
Blockly.Msg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Ad d-yerr aḥric yettwamlen deg uḍris.";
Blockly.Msg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg["TEXT_INDEXOF_OPERATOR_FIRST"] = "af-d timeḍriwt tamezwarut n uḍris";
Blockly.Msg["TEXT_INDEXOF_OPERATOR_LAST"] = "af-d timeḍriwt taneggarut deg uḍris";
Blockly.Msg["TEXT_INDEXOF_TITLE"] = "deg uḍris %1 %2 %3";
Blockly.Msg["TEXT_INDEXOF_TOOLTIP"] = "Ad d-yerr amatar n tmeḍriwt tamezwarut/taneggarut n uḍris amezwaru deg uḍris wis sin. Ad d-yerr %1 ma yella ulac aḍris.";
Blockly.Msg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg["TEXT_ISEMPTY_TITLE"] = "%1 d ilem";
Blockly.Msg["TEXT_ISEMPTY_TOOLTIP"] = "Add d-yerr idetti ma yella aḍris d ilem.";
Blockly.Msg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg["TEXT_JOIN_TITLE_CREATEWITH"] = "rnu aḍris s";
Blockly.Msg["TEXT_JOIN_TOOLTIP"] = "Ad yernu taceqquft n uḍris s usdukel gar yal amḍan n yiferdisen.";
Blockly.Msg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_LENGTH_TITLE"] = "teɣzi n %1";
Blockly.Msg["TEXT_LENGTH_TOOLTIP"] = "Ad d-yerr amḍan n yisekkilen (ddan ula d imellalen) deg uḍris d-ittunefken.";
Blockly.Msg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg["TEXT_PRINT_TITLE"] = "ad d-yesken %1";
Blockly.Msg["TEXT_PRINT_TOOLTIP"] = "Sken aḍris, amḍan neɣ azal-nniḍen d-ittunefken.";
Blockly.Msg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Suter amḍan i useqdac.";
Blockly.Msg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Suter aḍris i useqdac.";
Blockly.Msg["TEXT_PROMPT_TYPE_NUMBER"] = "aneftaɣ i umḍan s yizen";
Blockly.Msg["TEXT_PROMPT_TYPE_TEXT"] = "aneftaɣ i uḍris s yizen";
Blockly.Msg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
Blockly.Msg["TEXT_REPLACE_MESSAGE0"] = "semselsi %1 s %2 di %3";
Blockly.Msg["TEXT_REPLACE_TOOLTIP"] = "Ad isemselsi akk timeḍriwin n uḍris s wayeḍ.";
Blockly.Msg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
Blockly.Msg["TEXT_REVERSE_MESSAGE0"] = "tti %1";
Blockly.Msg["TEXT_REVERSE_TOOLTIP"] = "Ad yetti asmizzwer n yisekkilen deg uḍris.";
Blockly.Msg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg["TEXT_TEXT_TOOLTIP"] = "Asekkil, awal neɣ izirig n uḍris.";
Blockly.Msg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg["TEXT_TRIM_OPERATOR_BOTH"] = "Tukksa n yisekkilen imellalen seg sin n yidisan";
Blockly.Msg["TEXT_TRIM_OPERATOR_LEFT"] = "tukksa n yisekkilen seg uzelmaḍ";
Blockly.Msg["TEXT_TRIM_OPERATOR_RIGHT"] = "tukksa n yisekkilen seg uyeffus";
Blockly.Msg["TEXT_TRIM_TOOLTIP"] = "Ad d-yerr anɣel n uḍris s yisekkilen ilmawen yettwakksen seg yixf neɣ i sin.";
Blockly.Msg["TODAY"] = "Ass-a";
Blockly.Msg["UNDO"] = "Err-d";
Blockly.Msg["VARIABLES_DEFAULT_NAME"] = "aferdis";
Blockly.Msg["VARIABLES_GET_CREATE_SET"] = "Rnu 'sbadu %1'";
Blockly.Msg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg["VARIABLES_GET_TOOLTIP"] = "Ad d-yerr azal n umutti-agi.";
Blockly.Msg["VARIABLES_SET"] = "sbadu %1 ar %2";
Blockly.Msg["VARIABLES_SET_CREATE_GET"] = "Rnu 'awi-d %1'";
Blockly.Msg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg["VARIABLES_SET_TOOLTIP"] = "Ad yesbadu amutti-agi akken ad yegdu azal n unekcam.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS"] = "Amutti s yisem '%1' yella yakan.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "Amutti s yisem '%1' yella yakan i wanaw-nniḍen: '%2'.";
Blockly.Msg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Ini kra...";
Blockly.Msg["CONTROLS_FOREACH_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_FOR_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"];
Blockly.Msg["CONTROLS_IF_ELSE_TITLE_ELSE"] = Blockly.Msg["CONTROLS_IF_MSG_ELSE"];
Blockly.Msg["CONTROLS_IF_IF_TITLE_IF"] = Blockly.Msg["CONTROLS_IF_MSG_IF"];
Blockly.Msg["CONTROLS_IF_MSG_THEN"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_WHILEUNTIL_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TITLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["LISTS_GET_INDEX_HELPURL"] = Blockly.Msg["LISTS_INDEX_OF_HELPURL"];
Blockly.Msg["LISTS_GET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_INDEX_OF_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_SET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["MATH_CHANGE_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["PROCEDURES_DEFRETURN_COMMENT"] = Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"];
Blockly.Msg["PROCEDURES_DEFRETURN_DO"] = Blockly.Msg["PROCEDURES_DEFNORETURN_DO"];
Blockly.Msg["PROCEDURES_DEFRETURN_PROCEDURE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"];
Blockly.Msg["PROCEDURES_DEFRETURN_TITLE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"];
Blockly.Msg["TEXT_APPEND_VARIABLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];

Blockly.Msg["MATH_HUE"] = "230";
Blockly.Msg["LOOPS_HUE"] = "120";
Blockly.Msg["LISTS_HUE"] = "260";
Blockly.Msg["LOGIC_HUE"] = "210";
Blockly.Msg["VARIABLES_HUE"] = "330";
Blockly.Msg["TEXTS_HUE"] = "160";
Blockly.Msg["PROCEDURES_HUE"] = "290";
Blockly.Msg["COLOUR_HUE"] = "20";
Blockly.Msg["VARIABLES_DYNAMIC_HUE"] = "310";