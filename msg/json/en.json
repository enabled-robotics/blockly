{
	"@metadata": {
		"author": "Ellen Spertus <ellen.spertus@gmail.com>",
		"lastupdated": "2020-11-20 14:42:02.970067",
		"locale": "en",
		"messagedocumentation" : "qqq"
	},
	"VARIABLES_DEFAULT_NAME": "item",
	"TODAY": "Tomorrow",
	"DUPLICATE_BLOCK": "Duplicate",
	"ADD_COMMENT": "Add Comment",
	"REMOVE_COMMENT": "Remove Comment",
	"DUPLICATE_COMMENT": "Duplicate Comment",
	"EXTERNAL_INPUTS": "External Inputs",
	"INLINE_INPUTS": "Inline Inputs",
	"DELETE_BLOCK": "Delete Block",
	"DELETE_X_BLOCKS": "Delete %1 Blocks",
	"DELETE_ALL_BLOCKS": "Delete all %1 blocks?",
	"CLEAN_UP": "Clean up Blocks",
	"COLLAPSE_BLOCK": "Collapse Block",
	"COLLAPSE_ALL": "Collapse Blocks",
	"EXPAND_BLOCK": "Expand Block",
	"EXPAND_ALL": "Expand Blocks",
	"DISABLE_BLOCK": "Disable Block",
	"ENABLE_BLOCK": "Enable Block",
	"HELP": "Help",
	"UNDO": "Undo",
	"REDO": "Redo",
	"CHANGE_VALUE_TITLE": "Change value:",
	"RENAME_VARIABLE": "Rename variable...",
	"RENAME_VARIABLE_TITLE": "Rename all '%1' variables to:",
	"NEW_VARIABLE": "Create variable...",
	"NEW_STRING_VARIABLE": "Create string variable...",
	"NEW_NUMBER_VARIABLE": "Create number variable...",
	"NEW_COLOUR_VARIABLE": "Create colour variable...",
	"NEW_VARIABLE_TYPE_TITLE": "New variable type:",
	"NEW_VARIABLE_TITLE": "New variable name:",
	"VARIABLE_ALREADY_EXISTS": "A variable named '%1' already exists.",
	"VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE": "A variable named '%1' already exists for another type: '%2'.",
	"DELETE_VARIABLE_CONFIRMATION": "Delete %1 uses of the '%2' variable?",
	"CANNOT_DELETE_VARIABLE_PROCEDURE": "Can't delete the variable '%1' because it's part of the definition of the function '%2'",
	"DELETE_VARIABLE": "Delete the '%1' variable",
	"COLOUR_PICKER_HELPURL": "https://en.wikipedia.org/wiki/Color",
	"COLOUR_PICKER_TOOLTIP": "Choose a colour from the palette.",
	"COLOUR_RANDOM_HELPURL": "http://randomcolour.com",
	"COLOUR_RANDOM_TITLE": "random colour",
	"COLOUR_RANDOM_TOOLTIP": "Choose a colour at random.",
	"COLOUR_RGB_HELPURL": "http://www.december.com/html/spec/colorper.html",
	"COLOUR_RGB_TITLE": "colour with",
	"COLOUR_RGB_RED": "red",
	"COLOUR_RGB_GREEN": "green",
	"COLOUR_RGB_BLUE": "blue",
	"COLOUR_RGB_TOOLTIP": "Create a colour with the specified amount of red, green, and blue. All values must be between 0 and 100.",
	"COLOUR_BLEND_HELPURL": "http://meyerweb.com/eric/tools/color-blend/",
	"COLOUR_BLEND_TITLE": "blend",
	"COLOUR_BLEND_COLOUR1": "colour 1",
	"COLOUR_BLEND_COLOUR2": "colour 2",
	"COLOUR_BLEND_RATIO": "ratio",
	"COLOUR_BLEND_TOOLTIP": "Blends two colours together with a given ratio (0.0 - 1.0).",
	"CONTROLS_REPEAT_HELPURL": "https://en.wikipedia.org/wiki/For_loop",
	"CONTROLS_REPEAT_TITLE": "repeat %1 times",
	"CONTROLS_REPEAT_INPUT_DO": "do",
	"CONTROLS_REPEAT_TOOLTIP": "Do some statements several times.",
	"CONTROLS_WHILEUNTIL_HELPURL": "https://github.com/google/blockly/wiki/Loops#repeat",
	"CONTROLS_WHILEUNTIL_OPERATOR_WHILE": "repeat while",
	"CONTROLS_WHILEUNTIL_OPERATOR_UNTIL": "repeat until",
	"CONTROLS_WHILEUNTIL_TOOLTIP_WHILE": "While a value is true, then do some statements.",
	"CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL": "While a value is false, then do some statements.",
	"CONTROLS_FOR_HELPURL": "https://github.com/google/blockly/wiki/Loops#count-with",
	"CONTROLS_FOR_TOOLTIP": "Have the variable '%1' take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.",
	"CONTROLS_FOR_TITLE": "count with %1 from %2 to %3 by %4",
	"CONTROLS_FOREACH_HELPURL": "https://github.com/google/blockly/wiki/Loops#for-each",
	"CONTROLS_FOREACH_TITLE": "for each item %1 in list %2",
	"CONTROLS_FOREACH_TOOLTIP": "For each item in a list, set the variable '%1' to the item, and then do some statements.",
	"CONTROLS_FLOW_STATEMENTS_HELPURL": "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks",
	"CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK": "break out of loop",
	"CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE": "continue with next iteration of loop",
	"CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK": "Break out of the containing loop.",
	"CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE": "Skip the rest of this loop, and continue with the next iteration.",
	"CONTROLS_FLOW_STATEMENTS_WARNING": "Warning: This block may only be used within a loop.",
	"CONTROLS_IF_HELPURL": "https://github.com/google/blockly/wiki/IfElse",
	"CONTROLS_IF_TOOLTIP_1": "If a value is true, then do some statements.",
	"CONTROLS_IF_TOOLTIP_2": "If a value is true, then do the first block of statements. Otherwise, do the second block of statements.",
	"CONTROLS_IF_TOOLTIP_3": "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements.",
	"CONTROLS_IF_TOOLTIP_4": "If the first value is true, then do the first block of statements. Otherwise, if the second value is true, do the second block of statements. If none of the values are true, do the last block of statements.",
	"CONTROLS_IF_MSG_IF": "if",
	"CONTROLS_IF_MSG_ELSEIF": "else if",
	"CONTROLS_IF_MSG_ELSE": "else",
	"CONTROLS_IF_IF_TOOLTIP": "Add, remove, or reorder sections to reconfigure this if block.",
	"CONTROLS_IF_ELSEIF_TOOLTIP": "Add a condition to the if block.",
	"CONTROLS_IF_ELSE_TOOLTIP": "Add a final, catch-all condition to the if block.",
	"IOS_OK": "OK",
	"IOS_CANCEL": "Cancel",
	"IOS_ERROR": "Error",
	"IOS_PROCEDURES_INPUTS": "INPUTS",
	"IOS_PROCEDURES_ADD_INPUT": "+ Add Input",
	"IOS_PROCEDURES_ALLOW_STATEMENTS": "Allow statements",
	"IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR": "This function has duplicate inputs.",
	"IOS_VARIABLES_ADD_VARIABLE": "+ Add Variable",
	"IOS_VARIABLES_ADD_BUTTON": "Add",
	"IOS_VARIABLES_RENAME_BUTTON": "Rename",
	"IOS_VARIABLES_DELETE_BUTTON": "Delete",
	"IOS_VARIABLES_VARIABLE_NAME": "Variable name",
	"IOS_VARIABLES_EMPTY_NAME_ERROR": "You can't use an empty variable name.",
	"LOGIC_COMPARE_HELPURL": "https://en.wikipedia.org/wiki/Inequality_(mathematics)",
	"LOGIC_COMPARE_TOOLTIP_EQ": "Return true if both inputs equal each other.",
	"LOGIC_COMPARE_TOOLTIP_NEQ": "Return true if both inputs are not equal to each other.",
	"LOGIC_COMPARE_TOOLTIP_LT": "Return true if the first input is smaller than the second input.",
	"LOGIC_COMPARE_TOOLTIP_LTE": "Return true if the first input is smaller than or equal to the second input.",
	"LOGIC_COMPARE_TOOLTIP_GT": "Return true if the first input is greater than the second input.",
	"LOGIC_COMPARE_TOOLTIP_GTE": "Return true if the first input is greater than or equal to the second input.",
	"LOGIC_OPERATION_HELPURL": "https://github.com/google/blockly/wiki/Logic#logical-operations",
	"LOGIC_OPERATION_TOOLTIP_AND": "Return true if both inputs are true.",
	"LOGIC_OPERATION_AND": "and",
	"LOGIC_OPERATION_TOOLTIP_OR": "Return true if at least one of the inputs is true.",
	"LOGIC_OPERATION_OR": "or",
	"LOGIC_NEGATE_HELPURL": "https://github.com/google/blockly/wiki/Logic#not",
	"LOGIC_NEGATE_TITLE": "not %1",
	"LOGIC_NEGATE_TOOLTIP": "Returns true if the input is false. Returns false if the input is true.",
	"LOGIC_BOOLEAN_HELPURL": "https://github.com/google/blockly/wiki/Logic#values",
	"LOGIC_BOOLEAN_TRUE": "true",
	"LOGIC_BOOLEAN_FALSE": "false",
	"LOGIC_BOOLEAN_TOOLTIP": "Returns either true or false.",
	"LOGIC_NULL_HELPURL": "https://en.wikipedia.org/wiki/Nullable_type",
	"LOGIC_NULL": "null",
	"LOGIC_NULL_TOOLTIP": "Returns null.",
	"LOGIC_TERNARY_HELPURL": "https://en.wikipedia.org/wiki/%3F:",
	"LOGIC_TERNARY_CONDITION": "test",
	"LOGIC_TERNARY_IF_TRUE": "if true",
	"LOGIC_TERNARY_IF_FALSE": "if false",
	"LOGIC_TERNARY_TOOLTIP": "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.",
	"MATH_NUMBER_HELPURL": "https://en.wikipedia.org/wiki/Number",
	"MATH_NUMBER_TOOLTIP": "A number.",
	"MATH_ADDITION_SYMBOL": "+",
	"MATH_SUBTRACTION_SYMBOL": "-",
	"MATH_DIVISION_SYMBOL": "÷",
	"MATH_MULTIPLICATION_SYMBOL": "×",
	"MATH_POWER_SYMBOL": "^",
	"MATH_TRIG_SIN": "sin",
	"MATH_TRIG_COS": "cos",
	"MATH_TRIG_TAN": "tan",
	"MATH_TRIG_ASIN": "asin",
	"MATH_TRIG_ACOS": "acos",
	"MATH_TRIG_ATAN": "atan",
	"MATH_ARITHMETIC_HELPURL": "https://en.wikipedia.org/wiki/Arithmetic",
	"MATH_ARITHMETIC_TOOLTIP_ADD": "Return the sum of the two numbers.",
	"MATH_ARITHMETIC_TOOLTIP_MINUS": "Return the difference of the two numbers.",
	"MATH_ARITHMETIC_TOOLTIP_MULTIPLY": "Return the product of the two numbers.",
	"MATH_ARITHMETIC_TOOLTIP_DIVIDE": "Return the quotient of the two numbers.",
	"MATH_ARITHMETIC_TOOLTIP_POWER": "Return the first number raised to the power of the second number.",
	"MATH_SINGLE_HELPURL": "https://en.wikipedia.org/wiki/Square_root",
	"MATH_SINGLE_OP_ROOT": "square root",
	"MATH_SINGLE_TOOLTIP_ROOT": "Return the square root of a number.",
	"MATH_SINGLE_OP_ABSOLUTE": "absolute",
	"MATH_SINGLE_TOOLTIP_ABS": "Return the absolute value of a number.",
	"MATH_SINGLE_TOOLTIP_NEG": "Return the negation of a number.",
	"MATH_SINGLE_TOOLTIP_LN": "Return the natural logarithm of a number.",
	"MATH_SINGLE_TOOLTIP_LOG10": "Return the base 10 logarithm of a number.",
	"MATH_SINGLE_TOOLTIP_EXP": "Return e to the power of a number.",
	"MATH_SINGLE_TOOLTIP_POW10": "Return 10 to the power of a number.",
	"MATH_TRIG_HELPURL": "https://en.wikipedia.org/wiki/Trigonometric_functions",
	"MATH_TRIG_TOOLTIP_SIN": "Return the sine of a degree (not radian).",
	"MATH_TRIG_TOOLTIP_COS": "Return the cosine of a degree (not radian).",
	"MATH_TRIG_TOOLTIP_TAN": "Return the tangent of a degree (not radian).",
	"MATH_TRIG_TOOLTIP_ASIN": "Return the arcsine of a number.",
	"MATH_TRIG_TOOLTIP_ACOS": "Return the arccosine of a number.",
	"MATH_TRIG_TOOLTIP_ATAN": "Return the arctangent of a number.",
	"MATH_CONSTANT_HELPURL": "https://en.wikipedia.org/wiki/Mathematical_constant",
	"MATH_CONSTANT_TOOLTIP": "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).",
	"MATH_IS_EVEN": "is even",
	"MATH_IS_ODD": "is odd",
	"MATH_IS_PRIME": "is prime",
	"MATH_IS_WHOLE": "is whole",
	"MATH_IS_POSITIVE": "is positive",
	"MATH_IS_NEGATIVE": "is negative",
	"MATH_IS_DIVISIBLE_BY": "is divisible by",
	"MATH_IS_TOOLTIP": "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number. Returns true or false.",
	"MATH_CHANGE_HELPURL": "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter",
	"MATH_CHANGE_TITLE": "change %1 by %2",
	"MATH_CHANGE_TOOLTIP": "Add a number to variable '%1'.",
	"MATH_ROUND_HELPURL": "https://en.wikipedia.org/wiki/Rounding",
	"MATH_ROUND_TOOLTIP": "Round a number up or down.",
	"MATH_ROUND_OPERATOR_ROUND": "round",
	"MATH_ROUND_OPERATOR_ROUNDUP": "round up",
	"MATH_ROUND_OPERATOR_ROUNDDOWN": "round down",
	"MATH_ONLIST_HELPURL": "",
	"MATH_ONLIST_OPERATOR_SUM": "sum of list",
	"MATH_ONLIST_TOOLTIP_SUM": "Return the sum of all the numbers in the list.",
	"MATH_ONLIST_OPERATOR_MIN": "min of list",
	"MATH_ONLIST_TOOLTIP_MIN": "Return the smallest number in the list.",
	"MATH_ONLIST_OPERATOR_MAX": "max of list",
	"MATH_ONLIST_TOOLTIP_MAX": "Return the largest number in the list.",
	"MATH_ONLIST_OPERATOR_AVERAGE": "average of list",
	"MATH_ONLIST_TOOLTIP_AVERAGE": "Return the average (arithmetic mean) of the numeric values in the list.",
	"MATH_ONLIST_OPERATOR_MEDIAN": "median of list",
	"MATH_ONLIST_TOOLTIP_MEDIAN": "Return the median number in the list.",
	"MATH_ONLIST_OPERATOR_MODE": "modes of list",
	"MATH_ONLIST_TOOLTIP_MODE": "Return a list of the most common item(s) in the list.",
	"MATH_ONLIST_OPERATOR_STD_DEV": "standard deviation of list",
	"MATH_ONLIST_TOOLTIP_STD_DEV": "Return the standard deviation of the list.",
	"MATH_ONLIST_OPERATOR_RANDOM": "random item of list",
	"MATH_ONLIST_TOOLTIP_RANDOM": "Return a random element from the list.",
	"MATH_MODULO_HELPURL": "https://en.wikipedia.org/wiki/Modulo_operation",
	"MATH_MODULO_TITLE": "remainder of %1 ÷ %2",
	"MATH_MODULO_TOOLTIP": "Return the remainder from dividing the two numbers.",
	"MATH_CONSTRAIN_HELPURL": "https://en.wikipedia.org/wiki/Clamping_(graphics)",
	"MATH_CONSTRAIN_TITLE": "constrain %1 low %2 high %3",
	"MATH_CONSTRAIN_TOOLTIP": "Constrain a number to be between the specified limits (inclusive).",
	"MATH_RANDOM_INT_HELPURL": "https://en.wikipedia.org/wiki/Random_number_generation",
	"MATH_RANDOM_INT_TITLE": "random integer from %1 to %2",
	"MATH_RANDOM_INT_TOOLTIP": "Return a random integer between the two specified limits, inclusive.",
	"MATH_RANDOM_FLOAT_HELPURL": "https://en.wikipedia.org/wiki/Random_number_generation",
	"MATH_RANDOM_FLOAT_TITLE_RANDOM": "random fraction",
	"MATH_RANDOM_FLOAT_TOOLTIP": "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).",
	"MATH_ATAN2_HELPURL": "https://en.wikipedia.org/wiki/Atan2",
	"MATH_ATAN2_TITLE": "atan2 of X:%1 Y:%2",
	"MATH_ATAN2_TOOLTIP": "Return the arctangent of point (X, Y) in degrees from -180 to 180.",
	"TEXT_TEXT_HELPURL": "https://en.wikipedia.org/wiki/String_(computer_science)",
	"TEXT_TEXT_TOOLTIP": "A letter, word, or line of text.",
	"TEXT_JOIN_HELPURL": "https://github.com/google/blockly/wiki/Text#text-creation",
	"TEXT_JOIN_TITLE_CREATEWITH": "create text with",
	"TEXT_JOIN_TOOLTIP": "Create a piece of text by joining together any number of items.",
	"TEXT_CREATE_JOIN_TITLE_JOIN": "join",
	"TEXT_CREATE_JOIN_TOOLTIP": "Add, remove, or reorder sections to reconfigure this text block.",
	"TEXT_CREATE_JOIN_ITEM_TOOLTIP": "Add an item to the text.",
	"TEXT_APPEND_HELPURL": "https://github.com/google/blockly/wiki/Text#text-modification",
	"TEXT_APPEND_TITLE": "to %1 append text %2",
	"TEXT_APPEND_TOOLTIP": "Append some text to variable '%1'.",
	"TEXT_LENGTH_HELPURL": "https://github.com/google/blockly/wiki/Text#text-modification",
	"TEXT_LENGTH_TITLE": "length of %1",
	"TEXT_LENGTH_TOOLTIP": "Returns the number of letters (including spaces) in the provided text.",
	"TEXT_ISEMPTY_HELPURL": "https://github.com/google/blockly/wiki/Text#checking-for-empty-text",
	"TEXT_ISEMPTY_TITLE": "%1 is empty",
	"TEXT_ISEMPTY_TOOLTIP": "Returns true if the provided text is empty.",
	"TEXT_INDEXOF_HELPURL": "https://github.com/google/blockly/wiki/Text#finding-text",
	"TEXT_INDEXOF_TOOLTIP": "Returns the index of the first/last occurrence of the first text in the second text. Returns %1 if text is not found.",
	"TEXT_INDEXOF_TITLE": "in text %1 %2 %3",
	"TEXT_INDEXOF_OPERATOR_FIRST": "find first occurrence of text",
	"TEXT_INDEXOF_OPERATOR_LAST": "find last occurrence of text",
	"TEXT_CHARAT_HELPURL": "https://github.com/google/blockly/wiki/Text#extracting-text",
	"TEXT_CHARAT_TITLE": "in text %1 %2",
	"TEXT_CHARAT_FROM_START": "get letter #",
	"TEXT_CHARAT_FROM_END": "get letter # from end",
	"TEXT_CHARAT_FIRST": "get first letter",
	"TEXT_CHARAT_LAST": "get last letter",
	"TEXT_CHARAT_RANDOM": "get random letter",
	"TEXT_CHARAT_TAIL": "",
	"TEXT_CHARAT_TOOLTIP": "Returns the letter at the specified position.",
	"TEXT_GET_SUBSTRING_TOOLTIP": "Returns a specified portion of the text.",
	"TEXT_GET_SUBSTRING_HELPURL": "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text",
	"TEXT_GET_SUBSTRING_INPUT_IN_TEXT": "in text",
	"TEXT_GET_SUBSTRING_START_FROM_START": "get substring from letter #",
	"TEXT_GET_SUBSTRING_START_FROM_END": "get substring from letter # from end",
	"TEXT_GET_SUBSTRING_START_FIRST": "get substring from first letter",
	"TEXT_GET_SUBSTRING_END_FROM_START": "to letter #",
	"TEXT_GET_SUBSTRING_END_FROM_END": "to letter # from end",
	"TEXT_GET_SUBSTRING_END_LAST": "to last letter",
	"TEXT_GET_SUBSTRING_TAIL": "",
	"TEXT_CHANGECASE_HELPURL": "https://github.com/google/blockly/wiki/Text#adjusting-text-case",
	"TEXT_CHANGECASE_TOOLTIP": "Return a copy of the text in a different case.",
	"TEXT_CHANGECASE_OPERATOR_UPPERCASE": "to UPPER CASE",
	"TEXT_CHANGECASE_OPERATOR_LOWERCASE": "to lower case",
	"TEXT_CHANGECASE_OPERATOR_TITLECASE": "to Title Case",
	"TEXT_TRIM_HELPURL": "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces",
	"TEXT_TRIM_TOOLTIP": "Return a copy of the text with spaces removed from one or both ends.",
	"TEXT_TRIM_OPERATOR_BOTH": "trim spaces from both sides of",
	"TEXT_TRIM_OPERATOR_LEFT": "trim spaces from left side of",
	"TEXT_TRIM_OPERATOR_RIGHT": "trim spaces from right side of",
	"TEXT_PRINT_HELPURL": "https://github.com/google/blockly/wiki/Text#printing-text",
	"TEXT_PRINT_TITLE": "print %1",
	"TEXT_PRINT_TOOLTIP": "Print the specified text, number or other value.",
	"TEXT_PROMPT_HELPURL": "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user",
	"TEXT_PROMPT_TYPE_TEXT": "prompt for text with message",
	"TEXT_PROMPT_TYPE_NUMBER": "prompt for number with message",
	"TEXT_PROMPT_TOOLTIP_NUMBER": "Prompt for user for a number.",
	"TEXT_PROMPT_TOOLTIP_TEXT": "Prompt for user for some text.",
	"TEXT_COUNT_MESSAGE0": "count %1 in %2",
	"TEXT_COUNT_HELPURL": "https://github.com/google/blockly/wiki/Text#counting-substrings",
	"TEXT_COUNT_TOOLTIP": "Count how many times some text occurs within some other text.",
	"TEXT_REPLACE_MESSAGE0": "replace %1 with %2 in %3",
	"TEXT_REPLACE_HELPURL": "https://github.com/google/blockly/wiki/Text#replacing-substrings",
	"TEXT_REPLACE_TOOLTIP": "Replace all occurances of some text within some other text.",
	"TEXT_REVERSE_MESSAGE0": "reverse %1",
	"TEXT_REVERSE_HELPURL": "https://github.com/google/blockly/wiki/Text#reversing-text",
	"TEXT_REVERSE_TOOLTIP": "Reverses the order of the characters in the text.",
	"LISTS_CREATE_EMPTY_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-empty-list",
	"LISTS_CREATE_EMPTY_TITLE": "create empty list",
	"LISTS_CREATE_EMPTY_TOOLTIP": "Returns a list, of length 0, containing no data records",
	"LISTS_CREATE_WITH_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-list-with",
	"LISTS_CREATE_WITH_TOOLTIP": "Create a list with any number of items.",
	"LISTS_CREATE_WITH_INPUT_WITH": "create list with",
	"LISTS_CREATE_WITH_CONTAINER_TITLE_ADD": "list",
	"LISTS_CREATE_WITH_CONTAINER_TOOLTIP": "Add, remove, or reorder sections to reconfigure this list block.",
	"LISTS_CREATE_WITH_ITEM_TOOLTIP": "Add an item to the list.",
	"LISTS_REPEAT_HELPURL": "https://github.com/google/blockly/wiki/Lists#create-list-with",
	"LISTS_REPEAT_TOOLTIP": "Creates a list consisting of the given value repeated the specified number of times.",
	"LISTS_REPEAT_TITLE": "create list with item %1 repeated %2 times",
	"LISTS_LENGTH_HELPURL": "https://github.com/google/blockly/wiki/Lists#length-of",
	"LISTS_LENGTH_TITLE": "length of %1",
	"LISTS_LENGTH_TOOLTIP": "Returns the length of a list.",
	"LISTS_ISEMPTY_HELPURL": "https://github.com/google/blockly/wiki/Lists#is-empty",
	"LISTS_ISEMPTY_TITLE": "%1 is empty",
	"LISTS_ISEMPTY_TOOLTIP": "Returns true if the list is empty.",
	"LISTS_INLIST": "in list",
	"LISTS_INDEX_OF_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list",
	"LISTS_INDEX_OF_FIRST": "find first occurrence of item",
	"LISTS_INDEX_OF_LAST": "find last occurrence of item",
	"LISTS_INDEX_OF_TOOLTIP": "Returns the index of the first/last occurrence of the item in the list. Returns %1 if item is not found.",
	"LISTS_GET_INDEX_GET": "get",
	"LISTS_GET_INDEX_GET_REMOVE": "get and remove",
	"LISTS_GET_INDEX_REMOVE": "remove",
	"LISTS_GET_INDEX_FROM_START": "#",
	"LISTS_GET_INDEX_FROM_END": "# from end",
	"LISTS_GET_INDEX_FIRST": "first",
	"LISTS_GET_INDEX_LAST": "last",
	"LISTS_GET_INDEX_RANDOM": "random",
	"LISTS_GET_INDEX_TAIL": "",
	"LISTS_INDEX_FROM_START_TOOLTIP": "%1 is the first item.",
	"LISTS_INDEX_FROM_END_TOOLTIP": "%1 is the last item.",
	"LISTS_GET_INDEX_TOOLTIP_GET_FROM": "Returns the item at the specified position in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_FIRST": "Returns the first item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_LAST": "Returns the last item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_RANDOM": "Returns a random item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM": "Removes and returns the item at the specified position in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST": "Removes and returns the first item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST": "Removes and returns the last item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM": "Removes and returns a random item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM": "Removes the item at the specified position in a list.",
	"LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST": "Removes the first item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST": "Removes the last item in a list.",
	"LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM": "Removes a random item in a list.",
	"LISTS_SET_INDEX_HELPURL": "https://github.com/google/blockly/wiki/Lists#in-list--set",
	"LISTS_SET_INDEX_SET": "set",
	"LISTS_SET_INDEX_INSERT": "insert at",
	"LISTS_SET_INDEX_INPUT_TO": "as",
	"LISTS_SET_INDEX_TOOLTIP_SET_FROM": "Sets the item at the specified position in a list.",
	"LISTS_SET_INDEX_TOOLTIP_SET_FIRST": "Sets the first item in a list.",
	"LISTS_SET_INDEX_TOOLTIP_SET_LAST": "Sets the last item in a list.",
	"LISTS_SET_INDEX_TOOLTIP_SET_RANDOM": "Sets a random item in a list.",
	"LISTS_SET_INDEX_TOOLTIP_INSERT_FROM": "Inserts the item at the specified position in a list.",
	"LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST": "Inserts the item at the start of a list.",
	"LISTS_SET_INDEX_TOOLTIP_INSERT_LAST": "Append the item to the end of a list.",
	"LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM": "Inserts the item randomly in a list.",
	"LISTS_GET_SUBLIST_HELPURL": "https://github.com/google/blockly/wiki/Lists#getting-a-sublist",
	"LISTS_GET_SUBLIST_START_FROM_START": "get sub-list from #",
	"LISTS_GET_SUBLIST_START_FROM_END": "get sub-list from # from end",
	"LISTS_GET_SUBLIST_START_FIRST": "get sub-list from first",
	"LISTS_GET_SUBLIST_END_FROM_START": "to #",
	"LISTS_GET_SUBLIST_END_FROM_END": "to # from end",
	"LISTS_GET_SUBLIST_END_LAST": "to last",
	"LISTS_GET_SUBLIST_TAIL": "",
	"LISTS_GET_SUBLIST_TOOLTIP": "Creates a copy of the specified portion of a list.",
	"LISTS_SORT_HELPURL": "https://github.com/google/blockly/wiki/Lists#sorting-a-list",
	"LISTS_SORT_TITLE": "sort %1 %2 %3",
	"LISTS_SORT_TOOLTIP": "Sort a copy of a list.",
	"LISTS_SORT_ORDER_ASCENDING": "ascending",
	"LISTS_SORT_ORDER_DESCENDING": "descending",
	"LISTS_SORT_TYPE_NUMERIC": "numeric",
	"LISTS_SORT_TYPE_TEXT": "alphabetic",
	"LISTS_SORT_TYPE_IGNORECASE": "alphabetic, ignore case",
	"LISTS_SPLIT_HELPURL": "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists",
	"LISTS_SPLIT_LIST_FROM_TEXT": "make list from text",
	"LISTS_SPLIT_TEXT_FROM_LIST": "make text from list",
	"LISTS_SPLIT_WITH_DELIMITER": "with delimiter",
	"LISTS_SPLIT_TOOLTIP_SPLIT": "Split text into a list of texts, breaking at each delimiter.",
	"LISTS_SPLIT_TOOLTIP_JOIN": "Join a list of texts into one text, separated by a delimiter.",
	"LISTS_REVERSE_HELPURL": "https://github.com/google/blockly/wiki/Lists#reversing-a-list",
	"LISTS_REVERSE_MESSAGE0": "reverse %1",
	"LISTS_REVERSE_TOOLTIP": "Reverse a copy of a list.",
	"ORDINAL_NUMBER_SUFFIX": "",
	"VARIABLES_GET_HELPURL": "https://github.com/google/blockly/wiki/Variables#get",
	"VARIABLES_GET_TOOLTIP": "Returns the value of this variable.",
	"VARIABLES_GET_CREATE_SET": "Create 'set %1'",
	"VARIABLES_SET_HELPURL": "https://github.com/google/blockly/wiki/Variables#set",
	"VARIABLES_SET": "set %1 to %2",
	"VARIABLES_SET_TOOLTIP": "Sets this variable to be equal to the input.",
	"VARIABLES_SET_CREATE_GET": "Create 'get %1'",
	"PROCEDURES_DEFNORETURN_HELPURL": "https://en.wikipedia.org/wiki/Subroutine",
	"PROCEDURES_DEFNORETURN_TITLE": "to",
	"PROCEDURES_DEFNORETURN_PROCEDURE": "do something",
	"PROCEDURES_BEFORE_PARAMS": "with:",
	"PROCEDURES_CALL_BEFORE_PARAMS": "with:",
	"PROCEDURES_DEFNORETURN_DO": "",
	"PROCEDURES_DEFNORETURN_TOOLTIP": "Creates a function with no output.",
	"PROCEDURES_DEFNORETURN_COMMENT": "Describe this function...",
	"PROCEDURES_DEFRETURN_HELPURL": "https://en.wikipedia.org/wiki/Subroutine",
	"PROCEDURES_DEFRETURN_RETURN": "return",
	"PROCEDURES_DEFRETURN_TOOLTIP": "Creates a function with an output.",
	"PROCEDURES_ALLOW_STATEMENTS": "allow statements",
	"PROCEDURES_DEF_DUPLICATE_WARNING": "Warning: This function has duplicate parameters.",
	"PROCEDURES_CALLNORETURN_HELPURL": "https://en.wikipedia.org/wiki/Subroutine",
	"PROCEDURES_CALLNORETURN_TOOLTIP": "Run the user-defined function '%1'.",
	"PROCEDURES_CALLRETURN_HELPURL": "https://en.wikipedia.org/wiki/Subroutine",
	"PROCEDURES_CALLRETURN_TOOLTIP": "Run the user-defined function '%1' and use its output.",
	"PROCEDURES_MUTATORCONTAINER_TITLE": "inputs",
	"PROCEDURES_MUTATORCONTAINER_TOOLTIP": "Add, remove, or reorder inputs to this function.",
	"PROCEDURES_MUTATORARG_TITLE": "input name:",
	"PROCEDURES_MUTATORARG_TOOLTIP": "Add an input to the function.",
	"PROCEDURES_HIGHLIGHT_DEF": "Highlight function definition",
	"PROCEDURES_CREATE_DO": "Create '%1'",
	"PROCEDURES_IFRETURN_TOOLTIP": "If a value is true, then return a second value.",
	"PROCEDURES_IFRETURN_HELPURL": "http://c2.com/cgi/wiki?GuardClause",
	"PROCEDURES_IFRETURN_WARNING": "Warning: This block may be used only within a function definition.",
	"WORKSPACE_COMMENT_DEFAULT_TEXT": "Say something...",
	"COLLAPSED_WARNINGS_WARNING": "Collapsed blocks contain warnings.",
	"ER_DRIVE_TO_DEFINED_POSITION_TITLE": "Drive to Position",
	"ER_DRIVE_TO_DEFINED_POSITION_TOOLTIP": "Drive to a named position defined for the mobile robot",
	"ER_DRIVE_TO_DEFINED_POSITION_DESCRIPTION": "Positions can be defined directly in the map of the mobile robot and selected as targets using the 'Drive to Position' block.",
	"ER_MIR_MISSIONS_TITLE": "Execute MiR Mission",
	"ER_MIR_MISSIONS_TOOLTIP": "Executes a MiR mission from the MiR interface",
	"ER_MIR_MISSIONS_DESCRIPTION": "Missions defined in the MiR can be called using the 'Execute MiR Mission' block. Execution a mission blocks the program unil the execution of the MiR mission is finished.</br>This functionality is intended to enable user to define subprograms as mission within the MiR making advanced functionality (e.g. operating elevators) available.",
	"ER_DRIVE_TO_CHARGING_STATION_TITLE": "Drive to Charging Station",
	"ER_DRIVE_TO_CHARGING_STATION_TOOLTIP": "Drive to the specified charging station and start charging",
	"ER_DRIVE_TO_CHARGING_STATION_DESCRIPTION": "Drive to the specified charging station and start charging.</br>Charging stations are defined within the map of the MiR. Consult the user manual for details on how ot define a charging station.",
	"ER_DRIVE_TO_COORDINATES_TITLE": "Drive to Waypoints",
	"ER_DRIVE_TO_COORDINATES_TOOLTIP": "Drive to the waypoints defined in the body of the instruction",
	"ER_DRIVE_TO_COORDINATES_DESCRIPTION": "Drive to the waypoints defined in the body of the instruction.",
	"ER_WAIT_FOR_MIR_PLC_TITLE": "Wait for Change in MiR Register",
	"ER_WAIT_FOR_MIR_PLC_TOOLTIP": "Waits for a change in MiR Register before exeucting code define in the block",
	"ER_WAIT_FOR_MIR_PLC_DESCRIPTION": "Waits for a change in MiR Register before exeucting code define in the block.</br>The purpose of this block is to have the program work as a slave of the MiR, which can control the execution using the registers.",
	"ER_WAYPOINT_MOBILE_TITLE": "Mobile Waypoint",
	"ER_WAYPOINT_MOBILE_TOOLTIP": "Target postion for the Mobile platform.",
	"ER_WAYPOINT_MOBILE_DESCRIPTION": "A waypoint (target postion) for the mobile platform can either be specified as a constant or a variable.",
	"ER_UR_ACTION_TITLE": "Execute Event on UR",
	"ER_UR_ACTION_TOOLTIP": "Execute the specified event on the UR",
	"ER_UR_ACTION_DESCRIPTION": "Execute the specified event on the UR.</br>The name of the event shall match the name of an 'EventNode' specific under the ER-Ability node in the UR Polyscope interface.</br>Parameters allows passing up to 20 numbers to the event. The parameters will be available as a list variable in the UR Polyscope interface.",
	"ER_UR_GOTO_TITLE": "Move PTP",
	"ER_UR_GOTO_TOOLTIP": "Move robot in joint-space",
	"ER_UR_GOTO_DESCRIPTION": "Move robot in joint-space.</br>Joint-space motions gives the shortest travel by the motors in the joint. However, the tools of the robot will not move in a straight line.</br>The motion is defined by the set of specified way points.</br>Associated to a 'Move PTP' block are parameters for the maximum velocity and acceleration and blend distance. There parameters are the default settings for moving between waypoints, but can be overridden in the individual waypoints.",
	"ER_UR_GOTO_LIN_TITLE": "Move Linear",
	"ER_UR_GOTO_LIN_TOOLTIP": "Move robot linear in tool space",
	"ER_UR_GOTO_LIN_DESCRIPTION": "Move robot linear in tool space.</br>Linear motions in the tool space results in straight line movements of the tool. </br>The motion is defined by the set of specified way points.</br>Associated to a 'Move Linear' block are parameters for the maximum velocity and acceleration and blend distance. There parameters are the default settings for moving between waypoints, but can be overridden in the individual waypoints.",
	"ER_WAYPOINT_MANIPULATOR_TITLE": "Manipulator Waypoint",
	"ER_WAYPOINT_MANIPULATOR_TOOLTIP": "A postion/configuration for the manipulator to move to can either be a constant or a variable",
	"ER_WAYPOINT_MANIPULATOR_DESCRIPTION": "The 'Manipulator Waypoint' can be set to tree diffrent types:</br>1) A set configuration, this is usefull to guarantee the robot returns to the same roations of the joints.</br>2) A position and orientation defined as a XYZ coordinate and a ZYX Euler rotation. The position and orientation is for a specified tool frames and defined relative to a reference frame. </br>3) A variable that can be both a configuation and a pose</br>For each waypoint the user can define a desired velocity and acceleration for the associated motion and a blend parameter. If no parameters are defined the waypoint will inherit the block from the parenting 'Move PTP' or 'Move Linear' block.",
	"ER_UR_MOVE_REL_TITLE": "Move Relative",
	"ER_UR_MOVE_REL_TOOLTIP": "Executes a number of relative motions",
	"ER_UR_MOVE_REL_DESCRIPTION": "Executes a number of relative motions defined within the body of the block.",
	"ER_SET_PAYLOAD_TITLE": "Set Payload",
	"ER_SET_PAYLOAD_TOOLTIP": "Set the payload of the arm",
	"ER_SET_PAYLOAD_DESCRIPTION": "To set the payload of the arm two parameters needs to be given. <br/> 1) The actual payload measured in kg and <br/>2) The position [x,y,z] (in meters) of the Center of Mass (CoM) of the payload. The position is to be measured relative to the toolmount frame and NOT the  TCP frame.",
	"ER_UR_REL_MOTION_TITLE": "Relative Motion",
	"ER_UR_REL_MOTION_TOOLTIP": "Relative Motion",
	"ER_UR_REL_MOTION_DESCRIPTION": "A relative motion can either be defined as:</br>1) A movement between to define waypoints</br>2) A direction (in 6D) where the length of the direction vector defines the distance to move.",
	"ER_FORCE_ALIGN_TITLE": "Force Align",
	"ER_FORCE_ALIGN_TOOLTIP": "Aligns to a surface using force/torque sensor.",
	"ER_FORCE_ALIGN_DESCRIPTION": "The 'Force Align' block moves in a specified direction (defined with direction vector in given reference frame) until in contact with an object. When reaching contact it aligns the object to the surface using an impedance control.",
	"ER_PALLETIZE_TITLE": "Palletize",
	"ER_PALLETIZE_TOOLTIP": "Runs a sequence of instructions in a given pattern",
	"ER_PALLETIZE_DESCRIPTION": "The 'Palletize' block runs a sequence of instruction for the specified amount locations specified in a pattern.</br>If a pattern is shared as a variable among multiple 'Palletize' blocks the pattern will keep track of the next location to apply.",
	"ER_BOXPATTERN_TITLE": "Box Pattern",
	"ER_BOXPATTERN_TOOLTIP": "Defines box shaped (rectangular) pattern",
	"ER_BOXPATTERN_DESCRIPTION": "Defines a set of positions in a box shaped (rectanglar) pattern",
	"ER_GRIPPER_MOVEQ_TITLE": "Gripper Open/Close",
	"ER_GRIPPER_MOVEQ_TOOLTIP": "Gripper Open/Close",
	"ER_GRIPPER_MOVEQ_DESCRIPTION": "Open/close gripper to specified configuration",
	"ER_UVC_SWEEP_TITLE": "UVC sweep",
	"ER_UVC_SWEEP_TOOLTIP": "Powers on the UVC lamp and sweeps across a definde area with a set speed",
	"ER_UVC_SWEEP_DESCRIPTION": "Moves in a sweeping motion following the waypoints define in the block",
	"CALIBRATE_TO_MARKER_TITLE": "Calibrate to Marker",
	"CALIBRATE_TO_MARKER_TOOLTIP": "Calibrate to a visual marker",
	"CALIBRATE_TO_MARKER_DESCRIPTION": "Visual markers can be used to define local reference frames in the environment. To specify a reference based on a marker, first ensure that the marker is within view of the camera. Then do:</br>1) Specify the type of marker to calibrate to and the reference frame to use.</br>2) Press 'Calibrate To Marker' to store the calibration.</br>If the marker is correctly found the block will change from uninitialized (showing yellow warning triangle) to initialized. </br>When running the program the robot will detect the marker and update the reference. This way the robot can compensate for uncertainties cause by the mobile platform and reach targets relative to the market with high accuracy.</br>If the market cannot be detected the instruction will promt the user (generate popup in the user interface) where the user can ask to retry or cancel execution.",
	"BARCODE_DETECTOR_TITLE": "Barcode Detection",
	"BARCODE_DETECTOR_TOOLTIP": "Detect a barcode and save the data in a variable",
	"BARCODE_DETECTOR_DESCRIPTION": "Detect a barcode, and save the data in a variable. </br>Supports EAN/UPC, Code 128, Code 39, Interleaved 2 of 5 and QR Codes.</br>To detect a barcode it is important that the barcode or QR codes is well within view of the camera and the smallest features of the code has a detectable size in the image.</br>The value of the barcode/QR code is stored as a string.",
	"ER_SET_DIGITAL_OUTPUT_TITLE": "Set Digital Output",
	"ER_SET_DIGITAL_OUTPUT_TOOLTIP": "Set value of digital output",
	"ER_SET_DIGITAL_OUTPUT_DESCRIPTION": "Set value of digital output.</br></br>To configure the block do the following:</br>1) Select which IO Interface from the drop down box</br>2) Select which of the IO Pins to set</br>3) Select the value.",
	"ER_SET_ANALOG_OUTPUT_TITLE": "Set Analog Output",
	"ER_SET_ANALOG_OUTPUT_TOOLTIP": "Set value of analog output",
	"ER_SET_ANALOG_OUTPUT_DESCRIPTION": "Set value of analog output.</br></br>To configure the block do the following:</br>1) Select which IO Interface from the drop down box. </br>2) Select which of the IO Pins to set</br>3) Select the value",
	"ER_DIG_IO_VALUE_TITLE": "Digital IO",
	"ER_DIG_IO_VALUE_TOOLTIP": "Value of Digital IO",
	"ER_DIG_IO_VALUE_DESCRIPTION": "Get value of digital IO.</br>To configure the block do the following:</br>1) Select which IO Interface from the drop down box. </br>2) Select which of the IO Pins to read</br>Supports both getting the values of inputs and accessing values of outputs.</br>The value is return as a boolean.",
	"ER_ANALOG_IO_VALUE_TITLE": "Analog IO",
	"ER_ANALOG_IO_VALUE_TOOLTIP": "Value of Analog IO",
	"ER_ANALOG_IO_VALUE_DESCRIPTION": "Get value of analog IO.</br>To configure the block do the following:</br>1) Select which IO Interface from the drop down box. </br>2) Select which of the IO Pins to read</br>Supports both getting the values of inputs and accessing values of outputs.</br>The value is return as a number.",
	"ER_CONTROLS_REPEAT_TITLE": "Repeat",
	"ER_CONTROLS_REPEAT_TOOLTIP": "Repeats a set of instruction a number of times",
	"ER_CONTROLS_REPEAT_DESCRIPTION": "Repeats the instructions in the body of the block the specified number of times.",
	"ER_CONTROLS_WHILE_TITLE": "While",
	"ER_CONTROLS_WHILE_TOOLTIP": "Repeats a set of instructions untill a condtion is met",
	"ER_CONTROLS_WHILE_DESCRIPTION": "Repeats the instructions in the body of the block until until the specified condtion is met",
	"ER_CONTROLS_IF_TITLE": "If",
	"ER_CONTROLS_IF_TOOLTIP": "If construct with optional 'else if' and 'else'",
	"ER_CONTROLS_IF_DESCRIPTION": "If construct with optional 'else if' and 'else'.</br>The 'If' block branches based on whether the specified condition is true or false. The condition needs to evaluate to a boolean type.</br>The 'If' block can be reconfigured to include a number of 'else if' constructs and/or an 'else' construct by clicking the small gear in the top left corner of the block.",
	"ER_LOGIC_BOOLEAN_TITLE": "Boolean",
	"ER_LOGIC_BOOLEAN_TOOLTIP": "Boolean, either true or false",
	"ER_LOGIC_BOOLEAN_DESCRIPTION": "Boolean block, set to either true or false",
	"ER_SET_TCP_TITLE": "Set TCP",
	"ER_SET_TCP_DESCRIPTION": "Sets the transformation between the tool flange (the end) of the robot arm and the actual TCP. <br/> Changing the TCP in the program will offset all movements specified relative to the TCP. Movements specified in joint angles will not be impacted.",
	"ER_SET_TCP_TOOLTIP": "Set the TCP of the robot",
	"ER_LOGIC_COMPARE_TITLE": "Compare",
	"ER_LOGIC_COMPARE_TOOLTIP": "Logical comparison",
	"ER_LOGIC_COMPARE_DESCRIPTION": "Performs a logic comparison of two values.</br>Select which type of comparison to perform.</br>Assumes that the left and right hand sides of the comparison has identical data types. If the data types and incompatible the compare operator throws an exception. The exception can be caught using the 'Try Catch' construct. Failing to catch the exception will cause the program to halt.",
	"ER_LOGIC_OPERATION_TITLE": "Logic Operation",
	"ER_LOGIC_OPERATION_TOOLTIP": "Logic Operation",
	"ER_LOGIC_OPERATION_DESCRIPTION": "Performs a logic operation of two boolean expression.</br>Select which type of operation to perform. The type can be logic 'and' or 'or'.</br>If the right and left hand sides of the expression do not evaluate to boolean expressions the operation throws an exception. The exception can be caught using the 'Try Catch' construct. Failing to catch the exception will cause the program to halt.",
	"ER_LOGIC_NEGATE_TITLE": "Negates Boolean Value",
	"ER_LOGIC_NEGATE_TOOLTIP": "Negates boolean value",
	"ER_LOGIC_NEGATE_DESCRIPTION": "Negates boolean value.</br>The block only accepts values of boolean type. If needed to regate the value of a variable you need to create a logical comparison to extract the value of the variable.",
	"ER_MATH_NUMBER_TITLE": "Number",
	"ER_MATH_NUMBER_TOOLTIP": "Number value",
	"ER_MATH_NUMBER_DESCRIPTION": "Number value.</br>Numbers are represented a floating point values with double precision.",
	"ER_STRING_TITLE": "String",
	"ER_STRING_TOOLTIP": "String value",
	"ER_STRING_DESCRIPTION": "String value",
	"ER_ARRAY_TITLE": "Array",
	"ER_ARRAY_TOOLTIP": "Array of numbers",
	"ER_ARRAY_DESCRIPTION": "Array of numbers.</br>The size of the array can be extended and reduced selecting Add or Remove Element. Elements are alway appended to and removed from the back of the list.",
	"ER_MATH_TITLE": "Number Operation",
	"ER_MATH_TOOLTIP": "Basic mathematical +,-,*,/ operations",
	"ER_MATH_DESCRIPTION": "Provides functionality for adding, subtracting, multiplying and dividing.</br>If adding numbers or boolean with a string, the result becomes a string.</br>If the expressions do not valuate to numbers the operation throws an exception. The exception can be caught using the 'Try Catch' construct. Failing to catch the exception will cause the program to halt.",
	"ER_DEFINE_REFERENCE_TITLE": "Set a Reference",
	"ER_DEFINE_REFERENCE_TOOLTIP": "Updates value of a reference",
	"ER_DEFINE_REFERENCE_DESCRIPTION": "Updates the value of a reference.</br>When a reference is updated all motions relative to this reference will be relative to the new values.</br>This block enables to reuse same movements in a number of different locations. For instance, if having to execute the same assembly sequence in four locations, the movements can be programmed relative to a reference and only the reference will have to be updated for the four different locations.",
	"ER_XYZRPY_TITLE": "Tool Configuration",
	"ER_XYZRPY_TOOLTIP": "Position and orientation of the tool",
	"ER_XYZRPY_DESCRIPTION": "Position and orientation of the specified tool in the selected reference frame.</br>Position are in meters.</br>Orientation specified as ZYX Euler Angles and measured in degrees.",
	"ER_Q_TITLE": "Joint Configuration",
	"ER_Q_TOOLTIP": "Configuration of the robot arm specified by joint angles. All angles specified in degrees.",
	"ER_Q_DESCRIPTION": "Configuration of the robot arm specified by joint angles. All angles specified in degrees.",
	"ER_MIR_COORDINATES_TITLE": "Position",
	"ER_MIR_COORDINATES_TOOLTIP": "Position (X, Y) in meter and orientation (Angle) in degrees",
	"ER_MIR_COORDINATES_DESCRIPTION": "Position (X, Y) in meter and orientation (Angle) in degrees. </br>Positions are relative to the internal map of the mobile robot. This reference is defined as the World frame.",
	"ER_VAR_SET_TITLE": "Set Variable",
	"ER_VAR_SET_TOOLTIP": "Set value of variable",
	"ER_VAR_SET_DESCRIPTION": "Set value of variable.</br>A variable is globally available in the program (including in sub functions) and can hold any data type available in the interface. </br>Variables and not persistent and values will not be remembers between to runs of the same program.",
	"ER_VAR_GET_TITLE": "Get variable.",
	"ER_VAR_GET_TOOLTIP": "Get value of variable.",
	"ER_VAR_GET_DESCRIPTION": "Get value of variable.</br>A variable is globally available in the program (including in sub functions) and can hold any data type available in the interface. </br>Variables and not persistent and values will not be remembers between to runs of the same program. A variables thus needs to be Set before it can be accessed. </br>Trying to get the value of a variable not yet defined results in an exception.",
	"ER_POPUP_TITLE": "Popup",
	"ER_POPUP_TOOLTIP": "Popup message with true/false return value",
	"ER_POPUP_DESCRIPTION": "Generated Popup message for the user. </br>The user can select to confirm with and Ok or Cancel. The result is stored as a boolean in a variable, where Ok is true and Cancel is false. This variable can later be used to branch the program based on the user input.",
	"ER_WAIT_TITLE": "Wait",
	"ER_WAIT_TOOLTIP": "Wait for defined time",
	"ER_WAIT_DESCRIPTION": "Wait for the specified time before continuing execution.",
	"ER_WAIT_UNTIL_TITLE": "Wait Until",
	"ER_WAIT_UNTIL_TOOLTIP": "Wait until condition",
	"ER_WAIT_UNTIL_DESCRIPTION": "Waits until a condition is met",
	"ER_IS_TIME_TITLE": "Compares the Time",
	"ER_IS_TIME_TOOLTIP": "Compares the current time with a set time",
	"ER_IS_TIME_DESCRIPTION": "Compares the current time with a set time.</br>The block support checking if time is equal, not equal, less than, less than or equal, greater than or greater than or equal.</br>Time is compared based on hours and minutes. ",
	"ER_BATTERY_POWER_PERCENTAGE_TITLE": "Battery Power Percentage",
	"ER_BATTERY_POWER_PERCENTAGE_TOOLTIP": "Remaining battery power in percentages",
	"ER_BATTERY_POWER_PERCENTAGE_DESCRIPTION": "Value for remaining battery power in percentages.</br>The value if of type number",
	"ER_FUNCTION_BLOCK_TITLE": "Function Block",
	"ER_FUNCTION_BLOCK_TOOLTIP": "Defines a function that can be called multile times from the main program",
	"ER_FUNCTION_BLOCK_DESCRIPTION": "Defines a sequence of instructions which can be called as a function.</br>The instrutions of the 'Function Block' is called as if they where inlined in the sequence of the caller.</br>Variables are therefore not subject to scope.",
	"ER_CALL_FUNCTION_BLOCK_TITLE": "Call Function Block",
	"ER_CALL_FUNCTION_BLOCK_TOOLTIP": "Call Function Block",
	"ER_CALL_FUNCTION_BLOCK_DESCRIPTION": "Executes the instructions defined in a 'Function Block'",
	"ER_TRY_CATCH_TITLE": "Try Catch",
	"ER_TRY_CATCH_TOOLTIP": "Try Catch structure",
	"ER_TRY_CATCH_DESCRIPTION": "'Try Catch' structure enabling catching exceptions (errors) produced by the instructions in the Try section.</br>Only if an error is triggered the instructions specified within the Catch section is executed. Use the Catch section to handle the errors.",
	"ER_THROW_TITLE": "Throw",
	"ER_THROW_TOOLTIP": "Throws an error message.",
	"ER_THROW_DESCRIPTION": "Throws an exception (error message), which can be caught by the Try-Catch block.</br>If the exception is not caught it will cause the program to halt.",
	"ER_EXIT_TITLE": "Exit",
	"ER_EXIT_TOOLTIP": "When called stops the program",
	"ER_EXIT_DESCRIPTION": "Exits the program being executed.</br>Can be used if the program needs to stop given a certain condition. For instance if there are no objects/markers detected.",
	"ER_PROGRAM_TITLE": "Program",
	"ER_PROGRAM_TOOLTIP": "Defines program to be executed",
	"ER_PROGRAM_DESCRIPTION": "Defines program to be executed. </br>This block is mandatory and exactly one block will always exist.",
	"COLLAPSED_WARNINGS_WARNING": "Collapsed blocks contain warnings."
}
